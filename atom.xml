<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>YuHeng</title>
  
  <subtitle>大道至简</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-16T14:04:37.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>彧衡</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>个人简历</title>
    <link href="http://yoursite.com/2018/05/13/resume/"/>
    <id>http://yoursite.com/2018/05/13/resume/</id>
    <published>2018-05-13T10:23:12.000Z</published>
    <updated>2018-05-16T14:04:37.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><ul><li><p>手机：13263369194 </p></li><li><p>邮箱：<a href="mailto:hailianglone@gmail.com" target="_blank" rel="noopener">hailianglone@gmail.com</a>,<a href="mailto:hailianglong@126.com" target="_blank" rel="noopener">hailianglong@126.com</a></p></li><li><p>QQ: 317824594 </p><a id="more"></a></li><li><p>简历线上版：<a href="http://yuhengzhang.cn/2018/05/13/resume，密钥：zhanghl" target="_blank" rel="noopener">http://yuhengzhang.cn/2018/05/13/resume，密钥：zhanghl</a></p></li></ul><h1 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h1><ul><li>张海亮／男／1985 </li><li>本科／河北大学（数学与计算机系） </li><li>工作年限： 9年 </li><li>工作经历：1年J2ME方向，4年Android方向，4年JavaWeb方向</li><li>技术博客： <a href="http://yuhengzhang.cn" target="_blank" rel="noopener">http://yuhengzhang.cn</a> (很汗颜，刚搭建) </li><li>GitHub： <a href="http://github.com/hailianglone" target="_blank" rel="noopener">http://github.com/hailianglone</a></li><li>期望职位 ：web高级研发工程师，系统架构师</li><li>期望薪资：税前月薪不低于35K，可面议，期权或股份特别的可例外</li><li>期望城市：北京 </li></ul><h1 id="工作经历"><a href="#工作经历" class="headerlink" title="工作经历"></a>工作经历</h1><h2 id="北京新锐友信软件技术有限公司（2013年5月～至今）"><a href="#北京新锐友信软件技术有限公司（2013年5月～至今）" class="headerlink" title="北京新锐友信软件技术有限公司（2013年5月～至今）"></a>北京新锐友信软件技术有限公司（2013年5月～至今）</h2><p><strong>职位</strong>：技术合伙人  </p><h3 id="产品"><a href="#产品" class="headerlink" title="产品"></a>产品</h3><h4 id="聚合支付（明付平台）-web"><a href="#聚合支付（明付平台）-web" class="headerlink" title="聚合支付（明付平台）(web)"></a>聚合支付（明付平台）(web)</h4><p>明付平台是集支付宝，微信，京东，翼支付，银联二维码等平台之上的三方支付服务商平台，旨在帮助企业迅速便捷的接入相关支付的开放平台，目前SDK已开放的支付包含： </p><ul><li>一码付（商户提供一个二维码付款码，同时支持用户微信和支付宝主扫发起的支付） </li><li>刷卡付 （用户出示手机App钱包付款码，由商户主扫发起的支付，目前支持微信，支付宝，京东，翼支付，银联二维码，和包支付）</li><li>微信公众号支付</li><li>微信小程序支付</li><li>微信动态码支付</li></ul><p>目前已接入商户列表： </p><ul><li>北京华联综超（对应门店62家）</li><li>柏溪商贸 </li><li>萌优集 </li><li>华联西安skp (马上接入) </li></ul><p>该平台服务端架构设计，研发，部署运维，基本是本人一人负责，目前日流水600w，订单量100w单，SDK还未已开放方式发布。 </p><h4 id="小咖停车-web-and-android"><a href="#小咖停车-web-and-android" class="headerlink" title="小咖停车(web and android)"></a>小咖停车(web and android)</h4><p>小咖停车是基于简单IOT蓝牙通信技术，通过App和智能地锁的配合，用来解决停车难的问题，产品本来定位的写字楼和附近小区的错时停车，目前由于小区物业，居委会等等一系列问题，正在尝试海外日本市场，国内已接入小区和写字楼：</p><ul><li>牡丹园西里</li><li>知春路荣上居</li><li>有研院 </li><li>首钢停运（大洋路市场，暂未对外开放）</li><li>日本福冈（洽谈中）</li></ul><p>该平台服务端和Android客户端设计与研发基本由本人一人负责。</p><p>下载链接：<a href="http://www.360park.com.cn" target="_blank" rel="noopener">http://www.360park.com.cn</a></p><h4 id="零钱彩-web"><a href="#零钱彩-web" class="headerlink" title="零钱彩(web)"></a>零钱彩(web)</h4><p>零钱彩是彩票和零售的一种结合创新，目前已在<strong>华联部分超市</strong>试运营，由于本产品主属兄弟公司，业务和模式上暂处保密状态，不便多说。</p><p>本平台第一版本服务器端是本人一人进行设计和研发，目前该产品已获PreA融资。</p><p>小程序版：<img src="http://p8kn4m8eo.bkt.clouddn.com/gh_a4133787fd71_258.jpg" alt="微分投"></p><h3 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h3><p>北京华联是我们主要的客户，目前为华联提供的服务有：</p><ul><li>pos 收银 </li><li>posserver 收银服务端</li><li>crm </li><li>支付</li><li>公众号</li><li>自助购</li></ul><h4 id="北京华联CRM系统-web"><a href="#北京华联CRM系统-web" class="headerlink" title="北京华联CRM系统(web)"></a>北京华联CRM系统(web)</h4><p>北京华联crm系统是针对华联信息系统整个闭环系统中关于会员系统的解决方案，零售行业的会员系统是所有crm系统中最为复杂的，已实现主要功能列表如下：</p><ul><li>组织机构和门店管理 </li><li>员工管理，菜单管理和角色权限管理 </li><li>基础设置（俱乐部设置，积分权益设置，销售权益设置，支付权益设置）</li><li>积分返利，积分抵现，积分返礼</li><li>促销管理（折扣促销，优惠券促销，积分促销）</li><li>会员卡服务台</li><li>办卡自动化处理</li><li>简单审批</li><li>报表系统</li></ul><p>该系统研发团队3人，本人主要负责项目跟踪和实施，以及对接基础设置模块和促销管理模块，为pos系统提供crm核心api接口实现。 </p><h4 id="北京华联公众号系统（web"><a href="#北京华联公众号系统（web" class="headerlink" title="北京华联公众号系统（web)"></a>北京华联公众号系统（web)</h4><p>华联公众号系统是华联为了集中管理各个地区公众号营销以及电子会员管理而定制的公众号系统开发，系统功能列表：</p><ul><li>粉丝自动划分地区</li><li>分地区设置海报，本地特色，热销榜单，自由品牌，每月上新</li><li>电子会员</li><li>会员课堂</li><li>BHG服务（电子发票，会员权益，附近门店，意见反馈，常见问题）</li><li>分地区招聘设置</li></ul><p>该系统需求和服务端设计，研发及部署运维，本人一人负责。</p><h4 id="国安盒子触控遥控器-android"><a href="#国安盒子触控遥控器-android" class="headerlink" title="国安盒子触控遥控器(android)"></a>国安盒子触控遥控器(android)</h4><p>本系统是另一个初创团队的项目，一期主要本人负责和带队，遥控器广州地区一小批量量产，该遥控器是基于android原生系统定制，不同于目前市场上的智能遥控器，触控遥控器的本质是反向了小屏投大屏的模式，它是把电视屏幕投到遥控器屏幕附带红外控制功能，投屏模式分为<strong>镜像同屏</strong>和<strong>重绘同屏</strong>模式，系统架构为了后来要做平台的需求，架构设计如下：</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/uremote.jpg" alt="uremote"></p><h4 id="其它项目"><a href="#其它项目" class="headerlink" title="其它项目"></a>其它项目</h4><ul><li>优驾行（陕西优驾行）(android)</li><li>掌中宝 （圣元国际）（web and android)</li><li>国网直升机调度系统（国家电网）（web)</li><li>烤圈（海尔）（android)</li><li>黄金60s（外包，湖南卫视）（android)</li><li>宝宝讲故事（外包，金和）（android)</li><li>微视（外包，cctv)（android)  </li></ul><h2 id="中科创达科技股份有限公司（2011年9月～2013年5月）"><a href="#中科创达科技股份有限公司（2011年9月～2013年5月）" class="headerlink" title="中科创达科技股份有限公司（2011年9月～2013年5月）"></a>中科创达科技股份有限公司（2011年9月～2013年5月）</h2><p><strong>职位</strong>：subleader </p><h3 id="展讯8810，6810等项目（抱歉有些实在记不清楚了）"><a href="#展讯8810，6810等项目（抱歉有些实在记不清楚了）" class="headerlink" title="展讯8810，6810等项目（抱歉有些实在记不清楚了）"></a>展讯8810，6810等项目（抱歉有些实在记不清楚了）</h3><p>本人主要担任app小组subleader,团队4～6人，主负责模块：</p><ul><li>Contacts （联系人）</li><li>Launcher（主界面）</li><li>LockScreen （锁屏）</li><li>Setting （设置）</li><li>QuickSearchBox（搜索）</li><li>InputMethod（输入法）</li></ul><h2 id="北京捷通华声（2009年9月～2011年9月）"><a href="#北京捷通华声（2009年9月～2011年9月）" class="headerlink" title="北京捷通华声（2009年9月～2011年9月）"></a>北京捷通华声（2009年9月～2011年9月）</h2><p><strong>职位</strong>：研发工程师 </p><h3 id="天行输入法"><a href="#天行输入法" class="headerlink" title="天行输入法"></a>天行输入法</h3><p>主打手写输入，支持全屏手写，窗口书写，字体支持颜色设置，大小设置，简繁体设置以及毛笔等格式设置，以及更牛逼的行识别。当然手写识别和语音识别是公司核心，该部分都在公司研发总监手上，我们是so库方式集成接入。</p><h3 id="其它项目-1"><a href="#其它项目-1" class="headerlink" title="其它项目"></a>其它项目</h3><p>J2ME 相关，诺基亚N71（塞班系统）的时代了。 </p><h1 id="开源项目和作品"><a href="#开源项目和作品" class="headerlink" title="开源项目和作品"></a>开源项目和作品</h1><p>初创团队，你懂得，除了工作基本都没有思考的时间，只是短暂参与过<strong>iBase4j </strong>的项目，除了提了问题和提供swagger-ui支持，基本没有参与过什么。</p><p><a href="https://gitee.com/iBase4J/iBase4J" target="_blank" rel="noopener">https://gitee.com/iBase4J/iBase4J</a> </p><p><strong>注</strong>：以上所有web项目基本架构都是：  spring/springmvc+mybatis+mysql/oracle+redis+shiro+swagger+fastdfs+nginx+tomcat</p><ul><li>数据库支持读写分离</li><li>nginx做反向代理和负载均衡</li><li>swagger在线接口文档输出</li><li>shiro 权限管理</li><li>redis 缓存服务器和session共享</li><li>shardingjdbc/mycat 两种分库分表方案（暂时没有用到哦）</li><li>fastdfs 文件和图片服务器</li></ul><h1 id="技能清单"><a href="#技能清单" class="headerlink" title="技能清单"></a>技能清单</h1><ul><li>Web开发：spring/springmvc/mybatis/hibernate/jpa/mysql/oracle/sqlite/redis（熟悉），structs/springboot/ejb/python/nosql/nodejs（了解）</li><li>Web前端：jsp（熟悉），jquery/vue/argularjs（了解），react（知道有）</li><li>版本管理，文档和自动化部署工具：/cvs/svn/git/jenkins/redmine（熟悉），docker（了解）</li><li>包管理：/ant/maven/gradle（熟悉）, npm/yarn（前端了解）</li><li>单元测试：junit </li><li>文件存储：/ftp/fastdfs （熟悉）</li><li>Linux  常用命令</li><li>Web容器：/nginx/tomcat（熟悉），weblogic/jetty （了解）</li><li>Android：app/framework </li><li>云和开放平台：阿里云/腾讯云/ecs/oss/rds，七牛云，亚马逊云（马上要），/微信支付平台/微信公众平台/微信开放平台/蚂蚁金服开放平台／微博开放平台／腾讯开放平台／科大讯飞语音云／容联云短信／友盟统计／极光推送／环信通信／TestIn测试平台／银联开放平台／京东金融开放平台／电信翼支付开放平台／，openfire(了解)</li><li>分布式与大数据：dubbo/zookeeper/hadoop/spark/storm等（本人只是略知，毕竟目前实际项目未用到）</li><li>常用传输数据结构：/xml/json/protobuf</li></ul><p><strong>注</strong>：初创团队兼任scm和运维部署，负责/redmine/gitlab/jenkins/svn等服务搭建，以及产品和项目发布。</p><h1 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h1><p>感谢您花时间阅读我的简历，期待有机会与您一起共事。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;联系方式&quot;&gt;&lt;a href=&quot;#联系方式&quot; class=&quot;headerlink&quot; title=&quot;联系方式&quot;&gt;&lt;/a&gt;联系方式&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;手机：13263369194 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;邮箱：&lt;a href=&quot;mailto:hailianglone@gmail.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hailianglone@gmail.com&lt;/a&gt;,&lt;a href=&quot;mailto:hailianglong@126.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hailianglong@126.com&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;QQ: 317824594 &lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="关于我" scheme="http://yoursite.com/tags/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
    
  </entry>
  
  <entry>
    <title>知识点</title>
    <link href="http://yoursite.com/2018/05/13/kownledge/"/>
    <id>http://yoursite.com/2018/05/13/kownledge/</id>
    <published>2018-05-13T07:22:10.000Z</published>
    <updated>2018-05-14T11:20:53.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mac-拼音选择框不见？"><a href="#mac-拼音选择框不见？" class="headerlink" title="mac 拼音选择框不见？"></a>mac 拼音选择框不见？</h1><p>打开 Terminal （命令行），输入下面，回车即可。 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkill -f SCIM.app</span><br></pre></td></tr></table></figure><h1 id="Linux-下Tomcat-deploy-阻塞在INFO-Deploying-web-application-directory-…"><a href="#Linux-下Tomcat-deploy-阻塞在INFO-Deploying-web-application-directory-…" class="headerlink" title="Linux 下Tomcat deploy 阻塞在INFO: Deploying web application directory ….?"></a>Linux 下Tomcat deploy 阻塞在INFO: Deploying web application directory ….?</h1><p>linux 或者部分unix系统提供随机数设备是/dev/random和/dev/urandom，两个区别是，random安全性高，</p><p>生成随机数时间间隔有点长，jdk默认random.</p><p>修改$JAVA_HOME/jre/lib/security/java.security文件，替换securerandom.source=file:/dev/random/为secureradom.source=file:/dev/./urandom    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mac-拼音选择框不见？&quot;&gt;&lt;a href=&quot;#mac-拼音选择框不见？&quot; class=&quot;headerlink&quot; title=&quot;mac 拼音选择框不见？&quot;&gt;&lt;/a&gt;mac 拼音选择框不见？&lt;/h1&gt;&lt;p&gt;打开 Terminal （命令行），输入下面，回车即可。 &lt;
      
    
    </summary>
    
      <category term="经验" scheme="http://yoursite.com/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="知识点" scheme="http://yoursite.com/tags/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建全教程（一）</title>
    <link href="http://yoursite.com/2018/05/10/hexo_1/"/>
    <id>http://yoursite.com/2018/05/10/hexo_1/</id>
    <published>2018-05-10T14:10:34.000Z</published>
    <updated>2018-05-13T10:41:13.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><blockquote><p>心血来潮，搭建个博客玩玩，看了网上很多教程，有些很全面，我也是参照大家的基本一气呵成，呈现给大家现在的这个样子，但是迫于好奇心，总想知道那些奇奇怪怪的命令到底是什么？于是有了本系列教程的第一部分。 </p></blockquote><a id="more"></a><h1 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h1><ul><li>hexo: 基于nodejs的博客框架  </li><li>next: hexo 主题 </li><li>github: 不解释 </li><li>nodejs: javascript运行环境  </li><li></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;心血来潮，搭建个博客玩玩，看了网上很多教程，有些很全面，我也是参照大家的基本一气呵成，呈现给大家现在的这个样子，但是迫于好奇心，总想知道那些奇奇怪怪的命令到底是什么？于是有了本系列教程的第一部分。 &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="经验" scheme="http://yoursite.com/categories/%E7%BB%8F%E9%AA%8C/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>公众号支付</title>
    <link href="http://yoursite.com/2018/05/09/%E5%85%AC%E4%BC%97%E5%8F%B7%E6%94%AF%E4%BB%98/"/>
    <id>http://yoursite.com/2018/05/09/公众号支付/</id>
    <published>2018-05-09T15:44:13.000Z</published>
    <updated>2018-05-11T10:35:15.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="公众号支付"><a href="#公众号支付" class="headerlink" title="公众号支付"></a>公众号支付</h1><p>公众号支付，是渠道商通过微信公众号中的页面发起的线上支付场景<br><a id="more"></a><br>渠道接入商接入流程： </p><ul><li><p>明付平台分配给渠道商，对应的渠道号，虚拟门店号，款台号（门店号，款台号根据接入商对账要求和接入商一起定义规则） </p></li><li><p>接入商调用明付平台【下单】接口，取得对应公众号发起支付的参数列表</p></li><li><p>接入商调起支付接口，根据支付返回码确认支付状态，如果异常情况下，请调用查询接口确认支付状态</p></li><li><p>如果接入商有退款需求，可根据平台订单号进行【退款】操作 </p></li></ul><p><strong>注意</strong> 暂时不支持支付通知处理 </p><h2 id="下单生成公众号支付参数接口"><a href="#下单生成公众号支付参数接口" class="headerlink" title="下单生成公众号支付参数接口"></a>下单生成公众号支付参数接口</h2><ul><li><p>接口地址： 沙箱：<a href="https://realer.cn/api/payService/{version}/unifiedOrder" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/unifiedOrder</a><br>  默认版本号 1.0</p></li><li><p>参数列表  </p></li></ul><style>table th:nth-of-type(1){width: 10%;}table th:nth-of-type(2){width: 10%;}table th:nth-of-type(3){width: 10%;}table th:nth-of-type(4){width: 10%;}table th:nth-of-type(5){width: 30%;}table th:nth-of-type(6){width: 30%;}</style><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>渠道号</td><td>channelId</td><td>是</td><td>String</td><td>1000</td><td></td></tr><tr><td>门店编号</td><td>storeNo</td><td>是</td><td>String</td><td>100085</td><td></td></tr><tr><td>设备编号</td><td>posNo</td><td>是</td><td>String</td><td>100</td><td></td></tr><tr><td>收银员编号</td><td>cashierNo</td><td>否</td><td>String</td><td>02</td><td></td></tr><tr><td>许可列号</td><td>serierNo</td><td>否</td><td>String</td><td>fe2323df999</td><td>动态码请忽略</td></tr><tr><td>用户ID</td><td>openId</td><td>否</td><td>String</td><td>oG3werwerwer1221</td><td>动态码请忽略</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>1290012</td><td>接入商不传，默认平台订单号</td></tr><tr><td>订单金额</td><td>amount</td><td>是</td><td>int</td><td>12</td><td>单位（分）</td></tr><tr><td>订单时间</td><td>beginTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>支付类型</td><td>payType</td><td>是</td><td>String</td><td>WX_NATIVE</td><td>WX_PUBLIC</td></tr><tr><td>IP地址</td><td>ip</td><td>是</td><td>String</td><td>127.0.0.1</td><td></td></tr><tr><td>币种</td><td>currency</td><td>否</td><td>String</td><td>CNY</td><td></td></tr><tr><td>商品详情</td><td>goodsDetail</td><td>否</td><td>String</td><td></td><td>[{“goodsId”:”id0”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2},{“goodsId”:”id1”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2}]</td></tr><tr><td>备注</td><td>comment</td><td>否</td><td>String</td><td></td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td><td>非空参数按ASCII 排序，<br>末尾增加明付平台分配的KEY</td></tr></tbody></table><ul><li>返回结果  </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>应用ID</td><td>appId</td><td>否</td><td>String</td><td>wxd678efh567hg6787</td><td></td></tr><tr><td>时间戳</td><td>timeStamp</td><td>否</td><td>String</td><td>20180504123546</td><td></td></tr><tr><td>随机串</td><td>nonceStr</td><td>否</td><td>String</td><td>wxd678efh567hg6787fsdfsd2</td><td>随机串</td></tr><tr><td>数据包</td><td>package</td><td>否</td><td>String</td><td>prepay_id<br>=wx2017033010242291<br>fcfe0db70013231072</td><td>统一下单接口返回的 prepay_id 参数值，<br>提交格式如：prepay_id<br>=wx2017033010242291fcfe0db70013231072</td></tr><tr><td>签名方式</td><td>signType</td><td>否</td><td>String</td><td>MD5</td><td>签名类型，默认为MD5，<br>支持HMAC-SHA256和MD5。<br>注意此处需与统一下单的签名类型一致</td></tr><tr><td>签名</td><td>paySign</td><td>否</td><td>String</td><td>oG3werwerwer1221</td><td></td></tr><tr><td>明付平台订单号</td><td>tradeNo</td><td>是</td><td>String</td><td>P98212781821288121</td><td></td></tr><tr><td>第三方平台订单</td><td>outTradeNo</td><td>否</td><td>String</td><td>4001220181230456245</td><td></td></tr><tr><td>二维码URL</td><td>codeUrl</td><td>是</td><td>String</td><td>weixin://123.12121</td><td><strong>动态码关注字段</strong></td></tr></tbody></table><h2 id="订单查询接口"><a href="#订单查询接口" class="headerlink" title="订单查询接口"></a>订单查询接口</h2><p>仅仅支持明付订单号查询 </p><ul><li><p>接口地址： 沙箱： <a href="https://realer.cn/api/payService/{version}/tradePayQuery" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/tradePayQuery</a><br>  默认版本号 1.0 </p></li><li><p>参数列表 </p></li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>渠道号</td><td>channelId</td><td>是</td><td>String</td><td>1000</td><td></td></tr><tr><td>门店编号</td><td>storeNo</td><td>是</td><td>String</td><td>100085</td><td></td></tr><tr><td>设备编号</td><td>posNo</td><td>是</td><td>String</td><td>100</td><td></td></tr><tr><td>收银员编号</td><td>cashierNo</td><td>否</td><td>String</td><td>02</td><td></td></tr><tr><td>许可列号</td><td>serierNo</td><td>否</td><td>String</td><td>fe2323df999</td><td>动态码请忽略</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>oG3werwerwer1221</td><td></td></tr><tr><td>明付商户订单号</td><td>tradeNo</td><td>是</td><td>String</td><td>1290012</td><td>orderNo ,tradeNo 二选一，优先tradeNo</td></tr><tr><td>支付类型</td><td>payType</td><td>否</td><td>String</td><td>WX_NATIVE</td><td>WX_NATIVE(微信）,ALI_NATIVE（支付宝）</td></tr><tr><td>IP地址</td><td>ip</td><td>是</td><td>String</td><td>127.0.0.1</td><td></td></tr><tr><td>备注</td><td>comment</td><td>否</td><td>String</td><td></td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td><td>非空参数按ASCII 排序，末尾增加明付平台分配的KEY</td></tr></tbody></table><ul><li>返回结果 </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>原单支付金额</td><td>oriPayMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时，原单剩余可退金额</td><td>oriSurplusMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时 ，原单接入商订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>退款时，原单明付平台流水号</td><td>oriTradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>退款时，原单三方平台流水号</td><td>oriThirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr><tr><td>总支付金额</td><td>needPayMoney</td><td>是</td><td>int</td><td>1000</td><td>终端发起的待付金额  needPayMoney=<br>payMoney<br>+thirdDiscountMoney<br>+discountMoney<br>+merchantDiscountMoney</td></tr><tr><td>用户支付金额</td><td>payMoney</td><td>是</td><td>int</td><td>1000</td><td>用户支付金额</td></tr><tr><td>第三方优惠金额</td><td>thirdDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>第三方优惠金额</td></tr><tr><td>明付平台优惠金额</td><td>discountMoney</td><td>否</td><td>int</td><td>1000</td><td>明付平台优惠金额</td></tr><tr><td>接入商优惠金额</td><td>merchantDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>暂不支持</td></tr><tr><td>交易时间</td><td>tradeTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>明付平台流水号</td><td>tradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>三方平台流水号</td><td>thirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td></tr></tbody></table><h2 id="订单退款接口"><a href="#订单退款接口" class="headerlink" title="订单退款接口"></a>订单退款接口</h2><ul><li><p>接口地址： 沙箱： <a href="https://realer.cn/api/payService/{version}/refundment" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/refundment</a><br>   默认版本号 1.0 ，退货要求必须传refundNo,因为可以一票多退，防止重退，该字段接入商户必须保证唯一。参考生成规则orderNo-上笔退款平台订单号</p></li><li><p>参数列表 </p></li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>渠道号</td><td>channelId</td><td>是</td><td>String</td><td>1000</td><td></td></tr><tr><td>门店编号</td><td>storeNo</td><td>是</td><td>String</td><td>100085</td><td></td></tr><tr><td>设备编号</td><td>posNo</td><td>是</td><td>String</td><td>100</td><td>动态码设备列表区间100~119</td></tr><tr><td>收银员编号</td><td>cashierNo</td><td>否</td><td>String</td><td>02</td><td></td></tr><tr><td>许可列号</td><td>serierNo</td><td>否</td><td>String</td><td>fe2323df999</td><td>动态码请忽略</td></tr><tr><td>退款金额</td><td>amount</td><td>是</td><td>int</td><td>12</td><td>单位（分）</td></tr><tr><td>接入商原订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>接入商退款订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td>接入商不传，默认平台退单号</td></tr><tr><td>接入商退款唯一订单号</td><td>refundNo</td><td>是</td><td>String</td><td>1712010027-P03936456117297483776</td><td>接入商唯一，退单号</td></tr><tr><td>明付商户原订单号</td><td>TradeNo</td><td>是</td><td>String</td><td>P982127777712</td><td>oriOrderNo ,oriTradeNo 二选一，oriTradeNo</td></tr><tr><td>支付类型</td><td>payType</td><td>否</td><td>String</td><td>WX_NATIVE</td><td>WX_NATIVE(微信）,ALI_NATIVE（支付宝）</td></tr><tr><td>退货商品详情</td><td>goodsDetail</td><td>否</td><td>String</td><td></td><td>[{“goodsId”:”id0”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2},{“goodsId”:”id1”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2}]</td></tr><tr><td>退单时间</td><td>beginTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>IP地址</td><td>ip</td><td>是</td><td>String</td><td>127.0.0.1</td><td></td></tr><tr><td>备注</td><td>comment</td><td>否</td><td>String</td><td></td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td><td>非空参数按ASCII 排序，<br>末尾增加明付平台分配的KEY</td></tr></tbody></table><ul><li>返回结果 </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>原单支付金额</td><td>oriPayMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时，原单剩余可退金额</td><td>oriSurplusMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时 ，原单接入商订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>退款时，原单明付平台流水号</td><td>oriTradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>退款时，原单三方平台流水号</td><td>oriThirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr><tr><td>总支付金额</td><td>needPayMoney</td><td>是</td><td>int</td><td>1000</td><td>终端发起的待付金额  needPayMoney=<br>payMoney<br>+thirdDiscountMoney<br>+discountMoney<br>+merchantDiscountMoney</td></tr><tr><td>用户支付金额</td><td>payMoney</td><td>是</td><td>int</td><td>1000</td><td>用户支付金额</td></tr><tr><td>第三方优惠金额</td><td>thirdDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>第三方优惠金额</td></tr><tr><td>明付平台优惠金额</td><td>discountMoney</td><td>否</td><td>int</td><td>1000</td><td>明付平台优惠金额</td></tr><tr><td>接入商优惠金额</td><td>merchantDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>暂不支持</td></tr><tr><td>交易时间</td><td>tradeTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>明付平台流水号</td><td>tradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>三方平台流水号</td><td>thirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;公众号支付&quot;&gt;&lt;a href=&quot;#公众号支付&quot; class=&quot;headerlink&quot; title=&quot;公众号支付&quot;&gt;&lt;/a&gt;公众号支付&lt;/h1&gt;&lt;p&gt;公众号支付，是渠道商通过微信公众号中的页面发起的线上支付场景&lt;br&gt;
    
    </summary>
    
      <category term="接口文档" scheme="http://yoursite.com/categories/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="支付" scheme="http://yoursite.com/tags/%E6%94%AF%E4%BB%98/"/>
    
      <category term="动态码" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>刷卡付</title>
    <link href="http://yoursite.com/2018/05/09/%E5%88%B7%E5%8D%A1%E6%94%AF%E4%BB%98/"/>
    <id>http://yoursite.com/2018/05/09/刷卡支付/</id>
    <published>2018-05-09T15:44:13.000Z</published>
    <updated>2018-05-11T15:53:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="刷卡支付"><a href="#刷卡支付" class="headerlink" title="刷卡支付"></a>刷卡支付</h1><p>刷卡支付，是接入渠道商通过pos款台，扫用户支付码的支付场景<br><a id="more"></a><br>渠道接入商接入流程： </p><ul><li><p>明付平台分配给渠道商，对应的渠道号，虚拟门店号，款台号（门店号，款台号根据接入商对账要求和接入商一起定义规则） </p></li><li><p>接入商调用明付平台【设备接入】接口，取得对应支付授权码</p></li><li><p>接入商调用明付平台 【授权码支付】接口，进行支付</p></li><li><p>如果接入商有退款需求，可根据平台订单号进行【退款】操作 </p></li></ul><h2 id="设备接入"><a href="#设备接入" class="headerlink" title="设备接入"></a>设备接入</h2><ul><li><p>接口地址： 沙箱：<a href="https://realer.cn/api/payService/{version}/device/checkIn" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/device/checkIn</a><br>  默认版本号 1.0</p></li><li><p>参数列表  </p></li></ul><style>table th:nth-of-type(1){width: 10%;}table th:nth-of-type(2){width: 10%;}table th:nth-of-type(3){width: 10%;}table th:nth-of-type(4){width: 10%;}table th:nth-of-type(5){width: 30%;}table th:nth-of-type(6){width: 30%;}</style><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>渠道号</td><td>channelId</td><td>是</td><td>String</td><td>1000</td><td></td></tr><tr><td>门店编号</td><td>storeNo</td><td>是</td><td>String</td><td>100085</td><td></td></tr><tr><td>设备编号</td><td>posNo</td><td>是</td><td>String</td><td>100</td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td><td>非空参数按ASCII 排序，<br>末尾增加明付平台分配的KEY</td></tr></tbody></table><ul><li>返回结果  </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>授权码</td><td>licenceNo</td><td>是</td><td>String</td><td>4ef234239ioiwejq</td></tr></tbody></table><h2 id="刷卡支付接口"><a href="#刷卡支付接口" class="headerlink" title="刷卡支付接口"></a>刷卡支付接口</h2><ul><li>接口地址： 沙箱： <a href="https://realer.cn/api/payService/{version}/userPayCode" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/userPayCode</a><ul><li>version 1.0 : 同步请求方式 </li><li>version 2.0 : 异步请求方式，需要客户端主动发起轮询</li></ul></li><li>参数列表 </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>授权码</td><td>serierNo</td><td>是</td><td>String</td><td>4ef234239ioiwejq</td><td></td></tr><tr><td>支付授权码</td><td>token</td><td>是</td><td>String</td><td>扫码所得</td><td></td></tr><tr><td>金额</td><td>amount</td><td>是</td><td>int</td><td>10</td><td>单位（分）</td></tr><tr><td>订单号</td><td>orderNo</td><td>是</td><td>String</td><td>接入商订单号</td><td></td></tr><tr><td>订单时间</td><td>beginTime</td><td>是</td><td>String</td><td>20180509123456</td><td>yyyyMMddHHmmss</td></tr><tr><td>支付类型</td><td>payType</td><td>是</td><td>String</td><td>WX_F2F,ALI_F2F,JD_F2F</td><td></td></tr><tr><td>ip</td><td>ip</td><td>是</td><td>String</td><td>127.0.0.1</td><td></td></tr><tr><td>收银员编号</td><td>cashierNo</td><td>是</td><td>String</td><td>80</td><td></td></tr><tr><td>币种</td><td>currency</td><td>否</td><td>String</td><td>CNY</td><td></td></tr><tr><td>商品详情</td><td>goodsDetail</td><td>否</td><td>String</td><td></td><td>[{“goodsId”:”id0”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2},{“goodsId”:”id1”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2}]</td></tr><tr><td>备注</td><td>comment</td><td>是</td><td>String</td><td></td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td></tr></tbody></table><ul><li>返回结果 </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>原单支付金额</td><td>oriPayMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时，原单剩余可退金额</td><td>oriSurplusMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时 ，原单接入商订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>退款时，原单明付平台流水号</td><td>oriTradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>退款时，原单三方平台流水号</td><td>oriThirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr><tr><td>总支付金额</td><td>needPayMoney</td><td>是</td><td>int</td><td>1000</td><td>终端发起的待付金额  needPayMoney=<br>payMoney<br>+thirdDiscountMoney<br>+discountMoney<br>+merchantDiscountMoney</td></tr><tr><td>用户支付金额</td><td>payMoney</td><td>是</td><td>int</td><td>1000</td><td>用户支付金额</td></tr><tr><td>第三方优惠金额</td><td>thirdDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>第三方优惠金额</td></tr><tr><td>明付平台优惠金额</td><td>discountMoney</td><td>否</td><td>int</td><td>1000</td><td>明付平台优惠金额</td></tr><tr><td>接入商优惠金额</td><td>merchantDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>暂不支持</td></tr><tr><td>交易时间</td><td>tradeTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>明付平台流水号</td><td>tradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>三方平台流水号</td><td>thirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td></tr></tbody></table><h2 id="订单查询接口"><a href="#订单查询接口" class="headerlink" title="订单查询接口"></a>订单查询接口</h2><p>仅仅支持明付订单号查询 </p><ul><li><p>接口地址： 沙箱： <a href="https://realer.cn/api/payService/{version}/tradePayQuery" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/tradePayQuery</a><br>  默认版本号 1.0 </p></li><li><p>参数列表 </p></li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>渠道号</td><td>channelId</td><td>是</td><td>String</td><td>1000</td><td></td></tr><tr><td>门店编号</td><td>storeNo</td><td>是</td><td>String</td><td>100085</td><td></td></tr><tr><td>设备编号</td><td>posNo</td><td>是</td><td>String</td><td>100</td><td></td></tr><tr><td>收银员编号</td><td>cashierNo</td><td>否</td><td>String</td><td>02</td><td></td></tr><tr><td>许可列号</td><td>serierNo</td><td>否</td><td>String</td><td>fe2323df999</td><td>动态码请忽略</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>oG3werwerwer1221</td><td></td></tr><tr><td>明付商户订单号</td><td>tradeNo</td><td>是</td><td>String</td><td>1290012</td><td>orderNo ,tradeNo 二选一，优先tradeNo</td></tr><tr><td>支付类型</td><td>payType</td><td>否</td><td>String</td><td>WX_NATIVE</td><td>WX_NATIVE(微信）,ALI_NATIVE（支付宝）</td></tr><tr><td>IP地址</td><td>ip</td><td>是</td><td>String</td><td>127.0.0.1</td><td></td></tr><tr><td>备注</td><td>comment</td><td>否</td><td>String</td><td></td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td><td>非空参数按ASCII 排序，末尾增加明付平台分配的KEY</td></tr></tbody></table><ul><li>返回结果 </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>原单支付金额</td><td>oriPayMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时，原单剩余可退金额</td><td>oriSurplusMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时 ，原单接入商订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>退款时，原单明付平台流水号</td><td>oriTradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>退款时，原单三方平台流水号</td><td>oriThirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr><tr><td>总支付金额</td><td>needPayMoney</td><td>是</td><td>int</td><td>1000</td><td>终端发起的待付金额  needPayMoney=<br>payMoney<br>+thirdDiscountMoney<br>+discountMoney<br>+merchantDiscountMoney</td></tr><tr><td>用户支付金额</td><td>payMoney</td><td>是</td><td>int</td><td>1000</td><td>用户支付金额</td></tr><tr><td>第三方优惠金额</td><td>thirdDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>第三方优惠金额</td></tr><tr><td>明付平台优惠金额</td><td>discountMoney</td><td>否</td><td>int</td><td>1000</td><td>明付平台优惠金额</td></tr><tr><td>接入商优惠金额</td><td>merchantDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>暂不支持</td></tr><tr><td>交易时间</td><td>tradeTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>明付平台流水号</td><td>tradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>三方平台流水号</td><td>thirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td></tr></tbody></table><h2 id="订单退款接口"><a href="#订单退款接口" class="headerlink" title="订单退款接口"></a>订单退款接口</h2><ul><li><p>接口地址： 沙箱： <a href="https://realer.cn/api/payService/{version}/refundment" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/refundment</a><br>   默认版本号 1.0 ，退货要求必须传refundNo,因为可以一票多退，防止重退，该字段接入商户必须保证唯一。参考生成规则orderNo-上笔退款平台订单号</p></li><li><p>参数列表 </p></li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>渠道号</td><td>channelId</td><td>是</td><td>String</td><td>1000</td><td></td></tr><tr><td>门店编号</td><td>storeNo</td><td>是</td><td>String</td><td>100085</td><td></td></tr><tr><td>设备编号</td><td>posNo</td><td>是</td><td>String</td><td>100</td><td>动态码设备列表区间100~119</td></tr><tr><td>收银员编号</td><td>cashierNo</td><td>否</td><td>String</td><td>02</td><td></td></tr><tr><td>许可列号</td><td>serierNo</td><td>否</td><td>String</td><td>fe2323df999</td><td>动态码请忽略</td></tr><tr><td>退款金额</td><td>amount</td><td>是</td><td>int</td><td>12</td><td>单位（分）</td></tr><tr><td>接入商原订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>接入商退款订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td>接入商不传，默认平台退单号</td></tr><tr><td>接入商退款唯一订单号</td><td>refundNo</td><td>是</td><td>String</td><td>1712010027-P03936456117297483776</td><td>接入商唯一，退单号</td></tr><tr><td>明付商户原订单号</td><td>TradeNo</td><td>是</td><td>String</td><td>P982127777712</td><td>oriOrderNo ,oriTradeNo 二选一，oriTradeNo</td></tr><tr><td>支付类型</td><td>payType</td><td>否</td><td>String</td><td>WX_NATIVE</td><td>WX_NATIVE(微信）,ALI_NATIVE（支付宝）</td></tr><tr><td>退货商品详情</td><td>goodsDetail</td><td>否</td><td>String</td><td></td><td>[{“goodsId”:”id0”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2},{“goodsId”:”id1”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2}]</td></tr><tr><td>退单时间</td><td>beginTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>IP地址</td><td>ip</td><td>是</td><td>String</td><td>127.0.0.1</td><td></td></tr><tr><td>备注</td><td>comment</td><td>否</td><td>String</td><td></td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td><td>非空参数按ASCII 排序，<br>末尾增加明付平台分配的KEY</td></tr></tbody></table><ul><li>返回结果 </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>原单支付金额</td><td>oriPayMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时，原单剩余可退金额</td><td>oriSurplusMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时 ，原单接入商订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>退款时，原单明付平台流水号</td><td>oriTradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>退款时，原单三方平台流水号</td><td>oriThirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr><tr><td>总支付金额</td><td>needPayMoney</td><td>是</td><td>int</td><td>1000</td><td>终端发起的待付金额  needPayMoney=<br>payMoney<br>+thirdDiscountMoney<br>+discountMoney<br>+merchantDiscountMoney</td></tr><tr><td>用户支付金额</td><td>payMoney</td><td>是</td><td>int</td><td>1000</td><td>用户支付金额</td></tr><tr><td>第三方优惠金额</td><td>thirdDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>第三方优惠金额</td></tr><tr><td>明付平台优惠金额</td><td>discountMoney</td><td>否</td><td>int</td><td>1000</td><td>明付平台优惠金额</td></tr><tr><td>接入商优惠金额</td><td>merchantDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>暂不支持</td></tr><tr><td>交易时间</td><td>tradeTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>明付平台流水号</td><td>tradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>三方平台流水号</td><td>thirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;刷卡支付&quot;&gt;&lt;a href=&quot;#刷卡支付&quot; class=&quot;headerlink&quot; title=&quot;刷卡支付&quot;&gt;&lt;/a&gt;刷卡支付&lt;/h1&gt;&lt;p&gt;刷卡支付，是接入渠道商通过pos款台，扫用户支付码的支付场景&lt;br&gt;
    
    </summary>
    
      <category term="接口文档" scheme="http://yoursite.com/categories/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="支付" scheme="http://yoursite.com/tags/%E6%94%AF%E4%BB%98/"/>
    
      <category term="刷卡付" scheme="http://yoursite.com/tags/%E5%88%B7%E5%8D%A1%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>动态码支付</title>
    <link href="http://yoursite.com/2018/05/09/%E5%8A%A8%E6%80%81%E7%A0%81%E6%94%AF%E4%BB%98/"/>
    <id>http://yoursite.com/2018/05/09/动态码支付/</id>
    <published>2018-05-09T15:44:13.000Z</published>
    <updated>2018-05-11T09:28:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="动态码支付"><a href="#动态码支付" class="headerlink" title="动态码支付"></a>动态码支付</h1><p>动态码支付，是渠道商根据用户订单生成对应支付二维码，用户打开支付宝或者微信扫一扫功能，进行扫码支付。<br><a id="more"></a><br>渠道接入商接入流程： </p><ul><li><p>明付平台分配给渠道商，对应的渠道号，虚拟门店号，款台号（门店号，款台号根据接入商对账要求和接入商一起定义规则） </p></li><li><p>接入商调用明付平台【下单】接口，取得对应支付二维码链接和对应平台订单号 </p></li><li><p>接入商同时发起轮询【查询】接口，轮询间隔3~5,轮询5次，如果仍然没有收到支付确认，请重新【下单】刷新二维码，并提示用户重新扫码支付 </p></li><li><p>如果接入商有退款需求，可根据平台订单号进行【退款】操作 </p></li></ul><p><strong>注意</strong> 暂时不支持支付通知处理 </p><h2 id="下单生成二维码接口"><a href="#下单生成二维码接口" class="headerlink" title="下单生成二维码接口"></a>下单生成二维码接口</h2><ul><li><p>接口地址： 沙箱：<a href="https://realer.cn/api/payService/{version}/unifiedOrder" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/unifiedOrder</a><br>  默认版本号 1.0</p></li><li><p>参数列表  </p></li></ul><style>table th:nth-of-type(1){width: 10%;}table th:nth-of-type(2){width: 10%;}table th:nth-of-type(3){width: 10%;}table th:nth-of-type(4){width: 10%;}table th:nth-of-type(5){width: 30%;}table th:nth-of-type(6){width: 30%;}</style><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>渠道号</td><td>channelId</td><td>是</td><td>String</td><td>1000</td><td></td></tr><tr><td>门店编号</td><td>storeNo</td><td>是</td><td>String</td><td>100085</td><td></td></tr><tr><td>设备编号</td><td>posNo</td><td>是</td><td>String</td><td>100</td><td></td></tr><tr><td>收银员编号</td><td>cashierNo</td><td>否</td><td>String</td><td>02</td><td></td></tr><tr><td>许可列号</td><td>serierNo</td><td>否</td><td>String</td><td>fe2323df999</td><td>动态码请忽略</td></tr><tr><td>用户ID</td><td>openId</td><td>否</td><td>String</td><td>oG3werwerwer1221</td><td>动态码请忽略</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>1290012</td><td>接入商不传，默认平台订单号</td></tr><tr><td>订单金额</td><td>amount</td><td>是</td><td>int</td><td>12</td><td>单位（分）</td></tr><tr><td>订单时间</td><td>beginTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>支付类型</td><td>payType</td><td>是</td><td>String</td><td>WX_NATIVE</td><td>WX_NATIVE(微信）<br>,ALI_NATIVE（支付宝）</td></tr><tr><td>IP地址</td><td>ip</td><td>是</td><td>String</td><td>127.0.0.1</td><td></td></tr><tr><td>币种</td><td>currency</td><td>否</td><td>String</td><td>CNY</td><td></td></tr><tr><td>商品详情</td><td>goodsDetail</td><td>否</td><td>String</td><td></td><td>[{“goodsId”:”id0”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2},{“goodsId”:”id1”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2}]</td></tr><tr><td>备注</td><td>comment</td><td>否</td><td>String</td><td></td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td><td>非空参数按ASCII 排序，<br>末尾增加明付平台分配的KEY</td></tr></tbody></table><ul><li>返回结果  </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>应用ID</td><td>appId</td><td>否</td><td>String</td><td>wxd678efh567hg6787</td><td></td></tr><tr><td>时间戳</td><td>timeStamp</td><td>否</td><td>String</td><td>20180504123546</td><td></td></tr><tr><td>随机串</td><td>nonceStr</td><td>否</td><td>String</td><td>wxd678efh567hg6787fsdfsd2</td><td>随机串</td></tr><tr><td>数据包</td><td>package</td><td>否</td><td>String</td><td>prepay_id<br>=wx2017033010242291<br>fcfe0db70013231072</td><td>统一下单接口返回的 prepay_id 参数值，<br>提交格式如：prepay_id<br>=wx2017033010242291fcfe0db70013231072</td></tr><tr><td>签名方式</td><td>signType</td><td>否</td><td>String</td><td>MD5</td><td>签名类型，默认为MD5，<br>支持HMAC-SHA256和MD5。<br>注意此处需与统一下单的签名类型一致</td></tr><tr><td>签名</td><td>paySign</td><td>否</td><td>String</td><td>oG3werwerwer1221</td><td></td></tr><tr><td>明付平台订单号</td><td>tradeNo</td><td>是</td><td>String</td><td>P98212781821288121</td><td></td></tr><tr><td>第三方平台订单</td><td>outTradeNo</td><td>否</td><td>String</td><td>4001220181230456245</td><td></td></tr><tr><td>二维码URL</td><td>codeUrl</td><td>是</td><td>String</td><td>weixin://123.12121</td><td><strong>动态码关注字段</strong></td></tr></tbody></table><h2 id="订单查询接口"><a href="#订单查询接口" class="headerlink" title="订单查询接口"></a>订单查询接口</h2><p>仅仅支持明付订单号查询 </p><ul><li><p>接口地址： 沙箱： <a href="https://realer.cn/api/payService/{version}/tradePayQuery" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/tradePayQuery</a><br>  默认版本号 1.0 </p></li><li><p>参数列表 </p></li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>渠道号</td><td>channelId</td><td>是</td><td>String</td><td>1000</td><td></td></tr><tr><td>门店编号</td><td>storeNo</td><td>是</td><td>String</td><td>100085</td><td></td></tr><tr><td>设备编号</td><td>posNo</td><td>是</td><td>String</td><td>100</td><td></td></tr><tr><td>收银员编号</td><td>cashierNo</td><td>否</td><td>String</td><td>02</td><td></td></tr><tr><td>许可列号</td><td>serierNo</td><td>否</td><td>String</td><td>fe2323df999</td><td>动态码请忽略</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>oG3werwerwer1221</td><td></td></tr><tr><td>明付商户订单号</td><td>tradeNo</td><td>是</td><td>String</td><td>1290012</td><td>orderNo ,tradeNo 二选一，优先tradeNo</td></tr><tr><td>支付类型</td><td>payType</td><td>否</td><td>String</td><td>WX_NATIVE</td><td>WX_NATIVE(微信）,ALI_NATIVE（支付宝）</td></tr><tr><td>IP地址</td><td>ip</td><td>是</td><td>String</td><td>127.0.0.1</td><td></td></tr><tr><td>备注</td><td>comment</td><td>否</td><td>String</td><td></td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td><td>非空参数按ASCII 排序，末尾增加明付平台分配的KEY</td></tr></tbody></table><ul><li>返回结果 </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>原单支付金额</td><td>oriPayMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时，原单剩余可退金额</td><td>oriSurplusMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时 ，原单接入商订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>退款时，原单明付平台流水号</td><td>oriTradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>退款时，原单三方平台流水号</td><td>oriThirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr><tr><td>总支付金额</td><td>needPayMoney</td><td>是</td><td>int</td><td>1000</td><td>终端发起的待付金额  needPayMoney=<br>payMoney<br>+thirdDiscountMoney<br>+discountMoney<br>+merchantDiscountMoney</td></tr><tr><td>用户支付金额</td><td>payMoney</td><td>是</td><td>int</td><td>1000</td><td>用户支付金额</td></tr><tr><td>第三方优惠金额</td><td>thirdDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>第三方优惠金额</td></tr><tr><td>明付平台优惠金额</td><td>discountMoney</td><td>否</td><td>int</td><td>1000</td><td>明付平台优惠金额</td></tr><tr><td>接入商优惠金额</td><td>merchantDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>暂不支持</td></tr><tr><td>交易时间</td><td>tradeTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>明付平台流水号</td><td>tradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>三方平台流水号</td><td>thirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td></tr></tbody></table><h2 id="订单退款接口"><a href="#订单退款接口" class="headerlink" title="订单退款接口"></a>订单退款接口</h2><ul><li><p>接口地址： 沙箱： <a href="https://realer.cn/api/payService/{version}/refundment" target="_blank" rel="noopener">https://realer.cn/api/payService/{version}/refundment</a><br>   默认版本号 1.0 ，退货要求必须传refundNo,因为可以一票多退，防止重退，该字段接入商户必须保证唯一。参考生成规则orderNo-上笔退款平台订单号</p></li><li><p>参数列表 </p></li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>渠道号</td><td>channelId</td><td>是</td><td>String</td><td>1000</td><td></td></tr><tr><td>门店编号</td><td>storeNo</td><td>是</td><td>String</td><td>100085</td><td></td></tr><tr><td>设备编号</td><td>posNo</td><td>是</td><td>String</td><td>100</td><td>动态码设备列表区间100~119</td></tr><tr><td>收银员编号</td><td>cashierNo</td><td>否</td><td>String</td><td>02</td><td></td></tr><tr><td>许可列号</td><td>serierNo</td><td>否</td><td>String</td><td>fe2323df999</td><td>动态码请忽略</td></tr><tr><td>退款金额</td><td>amount</td><td>是</td><td>int</td><td>12</td><td>单位（分）</td></tr><tr><td>接入商原订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>接入商退款订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td>接入商不传，默认平台退单号</td></tr><tr><td>接入商退款唯一订单号</td><td>refundNo</td><td>是</td><td>String</td><td>1712010027-P03936456117297483776</td><td>接入商唯一，退单号</td></tr><tr><td>明付商户原订单号</td><td>TradeNo</td><td>是</td><td>String</td><td>P982127777712</td><td>oriOrderNo ,oriTradeNo 二选一，oriTradeNo</td></tr><tr><td>支付类型</td><td>payType</td><td>否</td><td>String</td><td>WX_NATIVE</td><td>WX_NATIVE(微信）,ALI_NATIVE（支付宝）</td></tr><tr><td>退货商品详情</td><td>goodsDetail</td><td>否</td><td>String</td><td></td><td>[{“goodsId”:”id0”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2},{“goodsId”:”id1”,”goodsName<br>“:”iname”,”price”:3,”quantity”:2}]</td></tr><tr><td>退单时间</td><td>beginTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>IP地址</td><td>ip</td><td>是</td><td>String</td><td>127.0.0.1</td><td></td></tr><tr><td>备注</td><td>comment</td><td>否</td><td>String</td><td></td><td></td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td></td><td>非空参数按ASCII 排序，<br>末尾增加明付平台分配的KEY</td></tr></tbody></table><ul><li>返回结果 </li></ul><table><thead><tr><th>字段名</th><th>变量名</th><th>必填</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>原单支付金额</td><td>oriPayMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时，原单剩余可退金额</td><td>oriSurplusMoney</td><td>否</td><td>int</td><td>1000</td><td>单位（分），只有查询退款时，该值才有意义</td></tr><tr><td>退款时 ，原单接入商订单号</td><td>oriOrderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>退款时，原单明付平台流水号</td><td>oriTradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>退款时，原单三方平台流水号</td><td>oriThirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr><tr><td>总支付金额</td><td>needPayMoney</td><td>是</td><td>int</td><td>1000</td><td>终端发起的待付金额  needPayMoney=<br>payMoney<br>+thirdDiscountMoney<br>+discountMoney<br>+merchantDiscountMoney</td></tr><tr><td>用户支付金额</td><td>payMoney</td><td>是</td><td>int</td><td>1000</td><td>用户支付金额</td></tr><tr><td>第三方优惠金额</td><td>thirdDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>第三方优惠金额</td></tr><tr><td>明付平台优惠金额</td><td>discountMoney</td><td>否</td><td>int</td><td>1000</td><td>明付平台优惠金额</td></tr><tr><td>接入商优惠金额</td><td>merchantDiscountMoney</td><td>否</td><td>int</td><td>1000</td><td>暂不支持</td></tr><tr><td>交易时间</td><td>tradeTime</td><td>是</td><td>String</td><td>20180504123546</td><td>yyyyMMddHHmmss</td></tr><tr><td>接入商订单号</td><td>orderNo</td><td>否</td><td>String</td><td>201804211320</td><td></td></tr><tr><td>明付平台流水号</td><td>tradeSerial</td><td>否</td><td>String</td><td>P901283232343434</td><td></td></tr><tr><td>三方平台流水号</td><td>thirdTradeNo</td><td>否</td><td>String</td><td>40092182888812121</td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;动态码支付&quot;&gt;&lt;a href=&quot;#动态码支付&quot; class=&quot;headerlink&quot; title=&quot;动态码支付&quot;&gt;&lt;/a&gt;动态码支付&lt;/h1&gt;&lt;p&gt;动态码支付，是渠道商根据用户订单生成对应支付二维码，用户打开支付宝或者微信扫一扫功能，进行扫码支付。&lt;br&gt;
    
    </summary>
    
      <category term="接口文档" scheme="http://yoursite.com/categories/%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="支付" scheme="http://yoursite.com/tags/%E6%94%AF%E4%BB%98/"/>
    
      <category term="动态码" scheme="http://yoursite.com/tags/%E5%8A%A8%E6%80%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>URemoteSdk 开发文档</title>
    <link href="http://yoursite.com/2017/05/09/uremote/"/>
    <id>http://yoursite.com/2017/05/09/uremote/</id>
    <published>2017-05-09T15:44:13.000Z</published>
    <updated>2018-05-15T08:26:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><h1 id="1-文档说明"><a href="#1-文档说明" class="headerlink" title="1 文档说明"></a>1 文档说明</h1><h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><p>URemote是盛世辉科技有限公司自主研发的一套用于智能遥控终端和电视盒子进行实时通信的整体解决方案，URemote核心部分即URemoteService将在本文档中做详细说明，对于三方app厂商，URemote 是作为开放平台以URemoteSdk的方式，提供给其进行即成，二次开发。URemoteSdk介绍详见：</p><a id="more"></a> <p><strong>URemoteSdk接口文档_V1.0.doc</strong></p><h2 id="阅读对象"><a href="#阅读对象" class="headerlink" title="阅读对象"></a>阅读对象</h2><p>本文档面向盛世辉内部研发经理，研发工程师。该人员需要具备一定的Android开发能力，只允许在公司内部流转。</p><h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><hr><p>  名词             解释</p><ul><li>URemoteSdk       APP层和URemoteService交互API,URemoteSdk会针对遥控器和盒子两端分别给出API接入说明，下文中如无特殊说明，C_URemoteSdk代指遥控端接入API，S_URemoteSdk代值盒子端接入API</li><li>URemoteService   开发人员只需了解该服务在整个框架中得位置及意义，同理，如无特殊说明，C_URemoteService代指遥控端服务，S_URemoteService代指盒子端服务</li><li>请求             通过AIDL/PROTOBUF协议把数据发送给接收方的过程。</li><li>通知             一般指盒子端主动推送给遥控器端得消息类型，比如当前处于什么模式（重绘，镜像，还是异步）</li><li>返回             遥控端发送操控指令给盒子有两种接入模式，同步或者异步，具体下文会具体描述</li><li>心跳             开发人员只做了解，具体代值遥控和盒子通讯机制</li></ul><hr><h1 id="URemote整体架构及URemoteService"><a href="#URemote整体架构及URemoteService" class="headerlink" title="URemote整体架构及URemoteService"></a>URemote整体架构及URemoteService</h1><p>系统架构及历史演进：</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/uremote.jpg" alt=""></p><p>以上架构图是产品初始设计，可以看到，目前最终实现基本未脱离此结构设计，而实际变动部分会在以下内容中说明缘由，框架中，RemoteService是该架构中的核心部分，向上以sdk的方式，给应用层app提供接入指南，向下以本地库为依赖。</p><p>RemoteService：提供重绘服务(EventService)，镜像服务(ScreenService)，以及同屏基础设置，</p><p>具体名称以实际代码为准。目前代码实现层面上，RemoteService，只提供了对应服务，没有提供对应的设置页面，之后应该在这方面有所补充，例如，提供镜像参数的设置，服务端口的设置等。</p><p>通信原本定义基于TCP的socket形式进行，目前是采用开源工程AndroidAsync，具体请参考：</p><p><a href="https://github.com/koush/AndroidAsync" target="_blank" rel="noopener">https://github.com/koush/AndroidAsync</a>以websocket形式实现，产品原定义的核心的touch消息，镜像协议，是想以so库的形式，这个可能是我们平台作为产品形式，最后从性能，稳定性等方面最终实现的交互方式（参考资料： <a href="https://openstf.io/" target="_blank" rel="noopener">https://openstf.io/</a>）</p><p>目前产品架构：</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/uremote_1.png" alt=""></p><p>图中，镜像部分应该是直接和盒子uremoteservice进行通信，这里没有画出跨层通信的交互。镜像部分具体请徐工补充完整。App层和service通过提供的api进行通信，通信方式aidl.</p><p>Service之间通过websocket通信，通信协议protobuf。</p><h2 id="URemoteService"><a href="#URemoteService" class="headerlink" title="URemoteService"></a>URemoteService</h2><p>URemoteService 中的模块（客户端和服务端基本一样，这里只介绍相对复杂一点的遥控客户端，具体差异请参考源代码）</p><ul><li>WatchDog</li></ul><p>watchdog 的实现是基于alarm机制，定时监测服务是否存活，主要实现功能uremoteservice保活，android里保活机制有很多种：</p><ol><li><p>有系统权限，内置rom，可以init启动，自动保活</p></li><li><p>alarm机制，类似看门狗实现</p></li><li><p>双service互保</p></li></ol><p>我们版本目前采用第二种，之后可以根据我们产品特点进行调整。</p><ul><li>websocket：</li></ul><blockquote><p>采用开源AndroidAsync，具体请参考上文提到的参考链接。重绘端口：6059,镜像端口：6060</p></blockquote><ul><li>protobuf:</li></ul><blockquote><p>具体请参考另一篇关于uremoteSdk的介绍</p></blockquote><ul><li>heartbeat:</li></ul><blockquote><p>心跳包，按照AndroidAsync官网建议，采用tcp ping 机制发送固定心跳字断</p></blockquote><ul><li>coreservice</li></ul><blockquote><p>向上提供aidl接口，水平service通信提供websocket接口路由</p></blockquote><ul><li>http</li></ul><blockquote><p>新增协议，主要提供一些同步查询接口，具体请黄海，志臣在uremoteSdk中补充</p></blockquote><ul><li>设备发现</li></ul><blockquote><p>结构图中，遗漏了设备发现功能，设备发现通过服务器发送组播，客户端扫描发送udp包建立握手，获取盒子IP.</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;h1 id=&quot;1-文档说明&quot;&gt;&lt;a href=&quot;#1-文档说明&quot; class=&quot;headerlink&quot; title=&quot;1 文档说明&quot;&gt;&lt;/a&gt;1 文档说明&lt;/h1&gt;&lt;h2 id=&quot;功能描述&quot;&gt;&lt;a href=&quot;#功能描述&quot; class=&quot;headerlink&quot; title=&quot;功能描述&quot;&gt;&lt;/a&gt;功能描述&lt;/h2&gt;&lt;p&gt;URemote是盛世辉科技有限公司自主研发的一套用于智能遥控终端和电视盒子进行实时通信的整体解决方案，URemote核心部分即URemoteService将在本文档中做详细说明，对于三方app厂商，URemote 是作为开放平台以URemoteSdk的方式，提供给其进行即成，二次开发。URemoteSdk介绍详见：&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>URemoteSdk接口文档</title>
    <link href="http://yoursite.com/2017/05/09/uremote_1/"/>
    <id>http://yoursite.com/2017/05/09/uremote_1/</id>
    <published>2017-05-09T15:44:13.000Z</published>
    <updated>2018-05-15T08:26:31.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>文档修订记录：</strong></p><table><thead><tr><th><strong>日期</strong></th><th><strong>版本</strong></th><th><strong>说明</strong></th><th><strong>作者</strong></th></tr></thead><tbody><tr><td>2017-05-22</td><td>1.0</td><td>uremotesdk 接口文档</td><td>张海亮</td></tr><tr><td>2017-07-03</td><td>1.0</td><td>增加listener,callback接口说明</td><td>张海亮</td></tr><tr><td>2017-07-05</td><td>1.0</td><td>增加播控接口说明</td><td>张海亮</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td></td></tr></tbody></table><h1 id="1-文档说明"><a href="#1-文档说明" class="headerlink" title="1 文档说明"></a>1 文档说明</h1><h2 id="1-1-功能描述"><a href="#1-1-功能描述" class="headerlink" title="1.1 功能描述"></a>1.1 功能描述</h2><p>URemoteSdk 是盛世辉科技有限公司提供得一套针对电视盒子和盛世辉遥控器进行网络自定义指令通信方案。第三方盒子APP通过该sdk得接入，可以很放便的通过遥控器操控盒子，实现一些传统遥控器不可有的一些用户操作体验。</p><a id="more"></a><h2 id="1-2-阅读对象"><a href="#1-2-阅读对象" class="headerlink" title="1.2 阅读对象"></a>1.2 阅读对象</h2><p>本文档面向电视盒子三方APP开发人员、编程人员及测试人员。该人员需要具备一定的Android开发能力。</p><h2 id="1-3-术语"><a href="#1-3-术语" class="headerlink" title="1.3 术语"></a>1.3 术语</h2><table><thead><tr><th><strong>名词</strong></th><th><strong>解释</strong></th></tr></thead><tbody><tr><td>URemoteSdk</td><td>APP层和URemoteService交互API,URemoteSdk会针对遥控器和盒子两端分别给出API接入说明，下文中如无特殊说明，C_URemoteSdk代指遥控端接入API，S_URemoteSdk代值盒子端接入API</td></tr><tr><td>URemoteService</td><td>开发人员只需了解该服务在整个框架中得位置及意义，同理，如无特殊说明，C_URemoteService代指遥控端服务，S_URemoteService代值盒子端服务</td></tr><tr><td>请求</td><td>通过AIDL/PROTOBUF协议把数据发送给接收方的过程。</td></tr><tr><td>通知</td><td>一般指盒子端主动推送给遥控器端得消息类型，比如当前处于什么模式（重绘，镜像，还是异步）</td></tr><tr><td>返回</td><td>遥控端发送操控指令给盒子有两种接入模式，同步或者异步，具体下文会具体描述</td></tr><tr><td>心跳</td><td>开发人员只做了解，具体代值遥控和盒子通讯机制</td></tr></tbody></table><h1 id="2-应用场景及接入流程"><a href="#2-应用场景及接入流程" class="headerlink" title="2      应用场景及接入流程"></a>2      应用场景及接入流程</h1><p>系统架构：</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/clip_image002.png" alt="img"></p><h2 id="2-1-重绘同屏"><a href="#2-1-重绘同屏" class="headerlink" title="2.1 重绘同屏"></a>2.1 重绘同屏</h2><p>应用场景介绍：适用于盒子三方APP开发商，需要借助盒子定制的盛世辉触控遥控器提高应用或者游戏在盒子上的可操作和便利性得需求。</p><p>l  场景：用户选择盛世辉遥控器打开电视盒子进入对应APP后，通过对遥控器的点击，触摸，滑动等操作来控制盒子。</p><p>l  系统交互时序图</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/clip_image004.png" alt="img"></p><p>l  具体流程：</p><ol><li><p>用户打开同屏APP，选择某个页面节点。</p></li><li><p>用户对该节点进行点击或者滑动等操作，封装为具体通信协议发送给盒子。</p></li><li><p>盒子收到消息同步或者异步返回，同时自己执行对应指令响应。</p></li><li><p>盒子响应对应指令，进行页面跳转</p></li><li><p>遥控器响应回传指令，进行页面跳转。</p></li></ol><h2 id="2-2-镜像同屏"><a href="#2-2-镜像同屏" class="headerlink" title="2.2 镜像同屏"></a>2.2 镜像同屏</h2><p>略</p><h1 id="3-接口规范"><a href="#3-接口规范" class="headerlink" title="3      接口规范"></a>3      接口规范</h1><p>URemoteSdk两类通讯机制，一是websocket，二是AIDL,通讯协议统一用Protobuf.</p><p>上层APP和service交互，即URemoteSdk是AIDL。C_URemoteService与S_URemoteService交互是webSocket.</p><p>Protobuf接口规范如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">message Envelope &#123;</span><br><span class="line"></span><br><span class="line">    optional uint32 id = 1;</span><br><span class="line"></span><br><span class="line">    required MessageType type = 2;</span><br><span class="line"></span><br><span class="line">    required bytes message = 3;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1）id 指令消息id，可选参数，一般用于接口异步返回标识。</p><p>2）MessageType 指令消息类型，支持自定义，目前支持消息类型：</p><p>系统内置消息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">enum MessageType &#123;</span><br><span class="line"></span><br><span class="line">    EVENT_KEY = 1;</span><br><span class="line"></span><br><span class="line">    EVENT_TOUCH = 2;</span><br><span class="line"></span><br><span class="line">    NOTIFY_STATE = 3;</span><br><span class="line"></span><br><span class="line">    GET_PROCESS = 4;</span><br><span class="line"></span><br><span class="line">    GET_APP = 5;</span><br><span class="line"></span><br><span class="line">    GET_VERSION = 6;</span><br><span class="line"></span><br><span class="line">    GET_DISPLAY = 7;</span><br><span class="line"></span><br><span class="line">    GET_PROPERTIES = 8;</span><br><span class="line"></span><br><span class="line">    GET_SERVER = 9;</span><br><span class="line"></span><br><span class="line">    EVENT_CLICK = 10;</span><br><span class="line"></span><br><span class="line">    EVENT_PLAYER = 11;</span><br><span class="line"></span><br><span class="line">    EVENT_CHANNEL = 12;</span><br><span class="line"></span><br><span class="line">    NOTIFY_PLAYER = 13;</span><br><span class="line"></span><br><span class="line">    EVENT_HOME = 14;</span><br><span class="line"></span><br><span class="line">    EVENT_MESSAGE = 15;</span><br><span class="line"></span><br><span class="line">    EVENT_DIFF = 16;</span><br><span class="line"></span><br><span class="line">    EVENT_DESTORY = 17;</span><br><span class="line"></span><br><span class="line">    EVENT_VOLUME = 18;</span><br><span class="line"></span><br><span class="line">    EVENT_AD = 19;</span><br><span class="line"></span><br><span class="line">    EVENT_GENSOR = 20;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>自定义消息统一用EVENT_MESSAGE。</p><p>3）message 具体消息体</p><p>以上定义可参照wire.proto或者message.proto</p><h1 id="4-接口安全规范"><a href="#4-接口安全规范" class="headerlink" title="4      接口安全规范"></a>4      接口安全规范</h1><p>略</p><h1 id="5-参数类型定义"><a href="#5-参数类型定义" class="headerlink" title="5      参数类型定义"></a>5      参数类型定义</h1><h2 id="5-1-EVENT-TOUCH-触摸消息"><a href="#5-1-EVENT-TOUCH-触摸消息" class="headerlink" title="5.1 EVENT_TOUCH-触摸消息"></a>5.1 EVENT_TOUCH-触摸消息</h2><table><thead><tr><th><strong>参数名称</strong></th><th><strong>参数编码</strong></th><th><strong>参数类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>触摸类型</td><td>action</td><td>int32</td><td></td></tr><tr><td>触摸X点</td><td>x</td><td>float</td><td></td></tr><tr><td>触摸Y点</td><td>y</td><td>float</td></tr></tbody></table><h2 id="5-2-EVENT-KEY-按键消息"><a href="#5-2-EVENT-KEY-按键消息" class="headerlink" title="5.2 EVENT_KEY-按键消息"></a>5.2 EVENT_KEY-按键消息</h2><table><thead><tr><th><strong>参数名称</strong></th><th><strong>参数编码</strong></th><th><strong>参数类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>事件类型</td><td>KeyEvent</td><td>enum</td><td>0,DOWN,1,UP,2.PRESS</td></tr><tr><td>按键码</td><td>keyCode</td><td>int32</td></tr></tbody></table><h2 id="5-3-EVENT-VOLUME-声音事件（之后重构优化）"><a href="#5-3-EVENT-VOLUME-声音事件（之后重构优化）" class="headerlink" title="5.3 EVENT_VOLUME-声音事件（之后重构优化）"></a>5.3 EVENT_VOLUME-声音事件（之后重构优化）</h2><table><thead><tr><th><strong>参数名称</strong></th><th><strong>参数编码</strong></th><th><strong>参数类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>音量类型</td><td>volumeType</td><td>enum</td><td>UP,上行音量   DOWN,下行音量</td></tr></tbody></table><h2 id="5-4-GET-APP-获取当前栈顶activity"><a href="#5-4-GET-APP-获取当前栈顶activity" class="headerlink" title="5.4 GET_APP 获取当前栈顶activity"></a>5.4 GET_APP 获取当前栈顶activity</h2><table><thead><tr><th><strong>参数名称</strong></th><th><strong>参数编码</strong></th><th><strong>参数类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="5-5-EVENT-DESOTRY-Activity关闭"><a href="#5-5-EVENT-DESOTRY-Activity关闭" class="headerlink" title="5.5 EVENT_DESOTRY-Activity关闭"></a>5.5 EVENT_DESOTRY-Activity关闭</h2><table><thead><tr><th><strong>参数名称</strong></th><th><strong>参数编码</strong></th><th><strong>参数类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>包名</td><td>packageName</td><td>String</td><td>应用包名</td></tr><tr><td>Activity名称</td><td>acitivityName</td><td>String</td><td>应用activity名称</td></tr></tbody></table><h2 id="5-6-GET-PROPERITES获取盒子相关属性"><a href="#5-6-GET-PROPERITES获取盒子相关属性" class="headerlink" title="5.6 GET_PROPERITES获取盒子相关属性"></a>5.6 GET_PROPERITES获取盒子相关属性</h2><table><thead><tr><th><strong>参数名称</strong></th><th><strong>参数编码</strong></th><th><strong>参数类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>属性key</td><td>name</td><td>String</td><td>CA,MAC,DEVICEID</td></tr><tr><td>属性value</td><td>value</td><td>String</td><td>属性值</td></tr></tbody></table><h2 id="5-7-GET-VERSION-版本同步"><a href="#5-7-GET-VERSION-版本同步" class="headerlink" title="5.7 GET_VERSION 版本同步"></a>5.7 GET_VERSION 版本同步</h2><p>暂无使用</p><h2 id="5-8-GET-SERVER-设备发现"><a href="#5-8-GET-SERVER-设备发现" class="headerlink" title="5.8 GET_SERVER 设备发现"></a>5.8 GET_SERVER 设备发现</h2><table><thead><tr><th><strong>参数名称</strong></th><th><strong>参数编码</strong></th><th><strong>参数类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>设备ip</td><td>ip</td><td>String</td><td>设备ip</td></tr></tbody></table><h2 id="5-9-EVENT-HOME-HOME处理"><a href="#5-9-EVENT-HOME-HOME处理" class="headerlink" title="5.9 EVENT_HOME HOME处理"></a>5.9 EVENT_HOME HOME处理</h2><h2 id="5-10-EVENT-MESSAGE-自定义通道"><a href="#5-10-EVENT-MESSAGE-自定义通道" class="headerlink" title="5.10     EVENT_MESSAGE 自定义通道"></a>5.10     EVENT_MESSAGE 自定义通道</h2><p>上层app，自定义通信消息类型</p><h2 id="5-11-EVENT-GSENSOR-sensor信息"><a href="#5-11-EVENT-GSENSOR-sensor信息" class="headerlink" title="5.11     EVENT_GSENSOR sensor信息"></a>5.11     EVENT_GSENSOR sensor信息</h2><table><thead><tr><th><strong>参数名称</strong></th><th><strong>参数编码</strong></th><th><strong>参数类型</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>Sensor values</td><td>values</td><td>float</td><td>Sensor values</td></tr><tr><td>Sensor 容量</td><td>accuracy</td><td>int</td><td>Sensor 容量</td></tr><tr><td>Sensor 时间戳</td><td>timestamp</td><td>long</td><td>Sensor 时间戳</td></tr><tr><td>Sensor</td><td>sensor</td><td>Sersor</td><td>具体定义参照代码</td></tr></tbody></table><p>//TODO播控消息已挪至app层自定义，如需参考，请黄海添加</p><p>//TODO其它如广告等后增加的消息类型，请相关开发人员添加</p><h1 id="1-URemoteSdk接入"><a href="#1-URemoteSdk接入" class="headerlink" title="1      URemoteSdk接入"></a>1      URemoteSdk接入</h1><h3 id="1-1-1-遥控端接入流程"><a href="#1-1-1-遥控端接入流程" class="headerlink" title="1.1.1  遥控端接入流程"></a>1.1.1  遥控端接入流程</h3><p>URemoteSdk目前是作为Andorid第三方依赖工程接入的，之后可能只提供AAR包的方式。本样例只提供Android-studio作为IDE的接入方式，其余IDE类同。</p><p>1）工程导入URemoteSdk</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/clip_image006.png" alt="img"></p><p>配置文件：</p><p>build.gradle: 添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line"></span><br><span class="line">    compile project(&apos;:uremotesdk&apos;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>setting.gradle：添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include &apos;:app&apos;,  &apos;:uremotesdk&apos;</span><br></pre></td></tr></table></figure><p>以上内容添加依赖库后，一般都会自动添加。</p><p>2）URemoteSdk 初始化</p><p>接入SDK的APP，在对应Application中进行初始化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URemoteSdk.getInstance().init(URemoteConfig.createDefault(this));</span><br></pre></td></tr></table></figure><p>init参数可以自定义，具体请参考相应代码。</p><p>3）具体通讯指令支持自定义，与业务相关的具体通讯指令自定义处理，这里提供样例如下：</p><p>自定义指令添加位置建议如下：</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/clip_image007.png" alt="img"></p><p>消息定义参照如下：message.proto</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/clip_image009.png" alt="img"></p><p>OnPageRequest:业务场景ViewPager切换分页指令。</p><p>4）接口请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Wire.Envelope envelope = Wire.Envelope.newBuilder().setType(Wire.MessageType.EVENT_MESSAGE)</span><br><span class="line"></span><br><span class="line">      .setId(MainIDs.ID_PAGE)</span><br><span class="line"></span><br><span class="line">      .setMessage(com.realer.service.proto.Message.OnPageRequest.newBuilder()</span><br><span class="line"></span><br><span class="line">            .setIndex(indexRadioButton.getIndex()).build().toByteString()).build();</span><br><span class="line"></span><br><span class="line">URemoteSdk.getInstance().getAgent().onMessage(envelope,null);</span><br></pre></td></tr></table></figure><p>自定义消息方法说明：</p><p>URemoteSdk.getInstance().getAgent().onMessage(Wire.Envelope envelope,OnMessageListener listener)</p><p>参数说明：</p><p> envelope:具体指令消息内容，参照上文提到的protobuf定义。</p><p> listener:是否需要回调同步处理，不需要可以传NULL.</p><h3 id=""><a href="#" class="headerlink" title=" "></a> </h3><p>5)遥控器和盒子连接状态监听</p><p>如果不做特殊处理，采用默认UI交互，APP 抽象基础Activity继承RemoteActivity或者RemoteFragmentActivity.</p><p>如果自己处理，监听，更新自定义UI:</p><p>动态注册广播：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">receiver = new RemoteReceiver();</span><br><span class="line"></span><br><span class="line">IntentFilter intentFilter = new IntentFilter();</span><br><span class="line"></span><br><span class="line">intentFilter.addAction(URemoteState.ACTION_STATE_CHANGE);</span><br><span class="line"></span><br><span class="line">registerReceiver(receiver,intentFilter);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">public   class RemoteReceiver extends BroadcastReceiver &#123;</span><br><span class="line"></span><br><span class="line">    private static final String TAG = &quot;RemoteReceiver&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line"></span><br><span class="line">    public void onReceive(Context context, Intent intent) &#123;</span><br><span class="line"></span><br><span class="line">        String action = intent.getAction();</span><br><span class="line"></span><br><span class="line">        if(action.equals(URemoteState.ACTION_STATE_CHANGE))&#123;</span><br><span class="line"></span><br><span class="line">            int state = intent.getIntExtra(URemoteState.EXTRA_STATE,-1);</span><br><span class="line"></span><br><span class="line">            String info = intent.getStringExtra(URemoteState.EXTRA_INFO);</span><br><span class="line"></span><br><span class="line">            Log.d(TAG,&quot;state&quot; + state);</span><br><span class="line"></span><br><span class="line">            switch (state)&#123;</span><br><span class="line"></span><br><span class="line">                case URemoteState.STATE_CONNECTED:</span><br><span class="line"></span><br><span class="line">                    PromptDialog.close();</span><br><span class="line"></span><br><span class="line">                    break;</span><br><span class="line"></span><br><span class="line">                case URemoteState.STATE_CONNECTING:</span><br><span class="line"></span><br><span class="line">                    PromptDialog.show(RemoteActivity.this,info,false,null);</span><br><span class="line"></span><br><span class="line">                    PromptDialog.hideBottom();</span><br><span class="line"></span><br><span class="line">                    break;</span><br><span class="line"></span><br><span class="line">                case URemoteState.STATE_DISCONNECTED:</span><br><span class="line"></span><br><span class="line">                    PromptDialog.show(RemoteActivity.this,info,false,null);</span><br><span class="line"></span><br><span class="line">                    PromptDialog.showBottom();</span><br><span class="line"></span><br><span class="line">                    break;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>URemoteState:</p><p>STATE_CONNECTED:已连接</p><p>STATE_CONNECTING:连接中</p><p>STATE_DISCONNECTED:已断开</p><p>6）右上角悬浮菜单</p><p> 同5，如果采用默认集成，集成方式如下：</p><p> 对应要显示得Activity中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line"></span><br><span class="line">protected void onResume() &#123;</span><br><span class="line"></span><br><span class="line">    super.onResume();</span><br><span class="line"></span><br><span class="line">    URemoteSdk.getInstance().showMenu();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line"></span><br><span class="line">protected void onPause() &#123;</span><br><span class="line"></span><br><span class="line">    super.onPause();</span><br><span class="line"></span><br><span class="line">    URemoteSdk.getInstance().hideMenu();</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：以上悬浮菜单，连接异常处理，物理返回键，触摸如果整个APP内都集成得话，建议抽象BaseActivity进行处理，另，触摸事件得处理，最好是只传输过程，不传输结果，以免最终结果状态不对应，即ACTION_UP不做指令传递。</p><p>具体可参照C_URemoteSdk中的RemoteActivity或者RemoteFragmentActivity.</p><h3 id="1-1-2-盒子端接入流程"><a href="#1-1-2-盒子端接入流程" class="headerlink" title="1.1.2  盒子端接入流程"></a>1.1.2  盒子端接入流程</h3><p>1）工程导入，同遥控端导入方式</p><p>2）URemoteSdk初始化，同遥控端初始化方式</p><p>3）消息注册监听：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line"></span><br><span class="line">protected void onResume() &#123;</span><br><span class="line"></span><br><span class="line">   super.onResume();</span><br><span class="line"></span><br><span class="line">   if(URemoteSdk.getInstance().getAgent() != null)&#123;</span><br><span class="line"></span><br><span class="line">      URemoteSdk.getInstance().getAgent().registerActivityCallback(messageCallback);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line"></span><br><span class="line">protected void onPause() &#123;</span><br><span class="line"></span><br><span class="line">   super.onPause();</span><br><span class="line"></span><br><span class="line">   if(URemoteSdk.getInstance().getAgent() != null)&#123;</span><br><span class="line"></span><br><span class="line">      URemoteSdk.getInstance().getAgent().unregisterActivityCallback(messageCallback);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"> /**</span><br><span class="line"></span><br><span class="line"> * 对应消息处理</span><br><span class="line"></span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">private Handler messageHandler = new Handler()&#123;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line"></span><br><span class="line">   public void handleMessage(Message msg) &#123;</span><br><span class="line"></span><br><span class="line">      super.handleMessage(msg);</span><br><span class="line"></span><br><span class="line">      Wire.Envelope envelope = (Wire.Envelope)msg.obj;</span><br><span class="line"></span><br><span class="line">      try &#123;</span><br><span class="line"></span><br><span class="line">      switch(msg.what)&#123;</span><br><span class="line"></span><br><span class="line">         case  MainIDs.ID_PAGE:</span><br><span class="line"></span><br><span class="line">            com.realer.service.proto.Message.OnPageRequest pageRequest = com.realer.service.proto.Message.OnPageRequest.parseFrom(envelope.getMessage());</span><br><span class="line"></span><br><span class="line">            if(pageRequest != null &amp;&amp; vp != null)&#123;</span><br><span class="line"></span><br><span class="line">               IndexRadioButton indexRadioButton = (IndexRadioButton)title_group.getChildAt(pageRequest.getIndex());</span><br><span class="line"></span><br><span class="line">               indexRadioButton.setFocusable(true);</span><br><span class="line"></span><br><span class="line">               indexRadioButton.requestFocusFromTouch();</span><br><span class="line"></span><br><span class="line">               indexRadioButton.requestFocus();</span><br><span class="line"></span><br><span class="line">               vp.setCurrentItem(pageRequest.getIndex());</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">         default:</span><br><span class="line"></span><br><span class="line">            break;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      &#125; catch (InvalidProtocolBufferException e) &#123;</span><br><span class="line"></span><br><span class="line">         e.printStackTrace();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"></span><br><span class="line"> * 消息接收</span><br><span class="line"></span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">private IMessageCallback.Stub messageCallback = new IMessageCallback.Stub() &#123;</span><br><span class="line"></span><br><span class="line">   @Override</span><br><span class="line"></span><br><span class="line">   public void onMessage(byte[] msg) throws RemoteException &#123;</span><br><span class="line"></span><br><span class="line">      try &#123;</span><br><span class="line"></span><br><span class="line">         Wire.Envelope envelope = Wire.Envelope.parseFrom(msg);</span><br><span class="line"></span><br><span class="line">         if(envelope.getType() != Wire.MessageType.EVENT_MESSAGE)&#123;</span><br><span class="line"></span><br><span class="line">            Log.d(TAG,&quot;invalid message&quot;);</span><br><span class="line"></span><br><span class="line">            return;</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         //id区分业务类型，０，默认跳转activity</span><br><span class="line"></span><br><span class="line">         Message handlerMsg = new Message();</span><br><span class="line"></span><br><span class="line">         handlerMsg.what = envelope.getId();</span><br><span class="line"></span><br><span class="line">         handlerMsg.obj = envelope;</span><br><span class="line"></span><br><span class="line">         messageHandler.sendMessage(handlerMsg);</span><br><span class="line"></span><br><span class="line">      &#125; catch (InvalidProtocolBufferException e) &#123;</span><br><span class="line"></span><br><span class="line">         e.printStackTrace();</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>4）状态通知，App内所有Activity，onResume要发送推送消息，样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line"></span><br><span class="line">protected void onResume() &#123;</span><br><span class="line"></span><br><span class="line">    super.onResume();</span><br><span class="line"></span><br><span class="line">    Log.d(TAG, &quot;onActivityNotify&quot;);</span><br><span class="line"></span><br><span class="line">    if(URemoteSdk.getInstance().getAgent() != null)&#123;</span><br><span class="line"></span><br><span class="line">        URemoteSdk.getInstance().getAgent().onNotifyState(State.REDRAW);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>State 状态：REDRAW 重绘</p><p>​           MIRROW 镜像</p><p>​           DIFF   异步</p><p>注意：以上状态通知，是要求APP必须接入得，消息注册依据自己业务而定，同遥控端接入一样，基础操作仍然可以抽象BaseActivity处理。</p><p>具体可参照S_URemoteSdk中的RemoteActivity或者RemoteFragmentActivity.</p><h2 id="1-2-接口说明"><a href="#1-2-接口说明" class="headerlink" title="1.2 接口说明"></a>1.2 接口说明</h2><h3 id="1-2-1-获取CA卡"><a href="#1-2-1-获取CA卡" class="headerlink" title="1.2.1  获取CA卡"></a>1.2.1  获取CA卡</h3><p>用户遥控端可以通过C_URemoteSdk,获取盒子CA卡信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URemoteSdk.getInstance().getAgent().getProp(Properties.CA)</span><br></pre></td></tr></table></figure><h3 id="1-2-2-获取盒子设备ID"><a href="#1-2-2-获取盒子设备ID" class="headerlink" title="1.2.2  获取盒子设备ID"></a>1.2.2  获取盒子设备ID</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URemoteSdk.getInstance().getAgent().getProp(Properties.DEVICEID);</span><br></pre></td></tr></table></figure><h3 id="1-2-3-获取盒子设备MAC"><a href="#1-2-3-获取盒子设备MAC" class="headerlink" title="1.2.3  获取盒子设备MAC"></a>1.2.3  获取盒子设备MAC</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URemoteSdk.getInstance().getAgent().getProp(Properties.MAC);</span><br></pre></td></tr></table></figure><h3 id="1-2-4-获取盒子状态（重绘，镜像，异步）"><a href="#1-2-4-获取盒子状态（重绘，镜像，异步）" class="headerlink" title="1.2.4  获取盒子状态（重绘，镜像，异步）"></a>1.2.4  获取盒子状态（重绘，镜像，异步）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URemoteSdk.getInstance().getAgent().getState()</span><br></pre></td></tr></table></figure><p>State 状态：REDRAW 重绘</p><p>​           MIRROW 镜像</p><p>​           DIFF   异步</p><h3 id="1-2-5-获取盒子音量"><a href="#1-2-5-获取盒子音量" class="headerlink" title="1.2.5  获取盒子音量"></a>1.2.5  获取盒子音量</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URemoteSdk.getInstance().getAgent().getVolume()</span><br></pre></td></tr></table></figure><h3 id="1-2-6-物理Key事件"><a href="#1-2-6-物理Key事件" class="headerlink" title="1.2.6  物理Key事件"></a>1.2.6  物理Key事件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URemoteSdk.getInstance().getAgent().onKeyEvent(KeyEvent.KEYCODE_BACK, com.realer.remote.client.protocol.KeyEvent.UP);</span><br></pre></td></tr></table></figure><h3 id="1-2-7-物理Touch事件"><a href="#1-2-7-物理Touch事件" class="headerlink" title="1.2.7  物理Touch事件"></a>1.2.7  物理Touch事件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URemoteSdk.getInstance().getAgent().onTouchEvent(motionEvent.getAction(), x, y);</span><br></pre></td></tr></table></figure><h3 id="1-2-8-直播频道换台-不建议使用了，可以自定义消息处理）"><a href="#1-2-8-直播频道换台-不建议使用了，可以自定义消息处理）" class="headerlink" title="1.2.8  直播频道换台(不建议使用了，可以自定义消息处理）"></a>1.2.8  直播频道换台(不建议使用了，可以自定义消息处理）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">URemoteSdk.getInstance().getAgent().onChannelChange(&quot;1000001&quot;);</span><br></pre></td></tr></table></figure><h3 id="1-2-9-播控相关事件"><a href="#1-2-9-播控相关事件" class="headerlink" title="1.2.9  播控相关事件"></a>1.2.9  播控相关事件</h3><p>//TODO ，已挪至上层app，走自定义消息通道，如需参考，请黄海添加</p><h3 id="1-2-10-server端callback回调"><a href="#1-2-10-server端callback回调" class="headerlink" title="1.2.10 server端callback回调"></a>1.2.10 server端callback回调</h3><p>IHomeCallback: home 按键处理</p><p>IADCallback: 广告事件处理</p><p>IMessageCallback 自定义事件回调</p><p>IChannelCallback 频道切换回调</p><p>IPlayerCallabck  播控回调</p><p>具体注册，和注销请参照具体sdk代码</p><h3 id="1-2-11-client端Listen"><a href="#1-2-11-client端Listen" class="headerlink" title="1.2.11 client端Listen"></a>1.2.11 client端Listen</h3><p>OnAppListen 栈顶app</p><p>OnMessageListen 消息listen</p><p>OnMiniCapListen 镜像listen</p><p>OnURemoteListen 设备发现listen</p><p>OnPlayerListen  播控listen</p><p>具体注册，和注销请参照具体sdk代码</p><h3 id="1-2-12-自定义通道"><a href="#1-2-12-自定义通道" class="headerlink" title="1.2.12 自定义通道"></a>1.2.12 自定义通道</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">client 主动消息发送通用接口: OnMessage void onEvent(final byte[] message);</span><br></pre></td></tr></table></figure><p>server 主动推送消息通用接口: OnNotify void onNotify(final byte[] notify);</p><p>注：像瀑布流，ListView,GridView,ScrollView等这些滑动控件，建议实现监听滑动跟踪X,Y信息给到盒子端通过自定义消息处理测试下。目前像触摸，key事件</p><p>是在service里通过instrument 底层注入得方式，样例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">private class EventWorker extends Thread &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line"></span><br><span class="line">    public void run() &#123;</span><br><span class="line"></span><br><span class="line">        while (!isInterrupted()) &#123;</span><br><span class="line"></span><br><span class="line">            try &#123;</span><br><span class="line"></span><br><span class="line">                Wire.TouchEventRequest touchEventRequest = eventMsgs.take();</span><br><span class="line"></span><br><span class="line">                if (touchEventRequest != null) &#123;</span><br><span class="line"></span><br><span class="line">                    final float touchX = touchEventRequest.getX() * Constants.SERVER_WIDTH / Constants.CLIENT_HEIGHT;</span><br><span class="line"></span><br><span class="line">                    final float touchY = touchEventRequest.getY() * Constants.SERVER_HEIGHT / Constants.CLIENT_WIDTH;</span><br><span class="line"></span><br><span class="line">                    Log.d(TAG, &quot;input--x&quot; + touchX + &quot;--y--&quot; + touchY);</span><br><span class="line"></span><br><span class="line">                    instrumentation.sendPointerSync(</span><br><span class="line"></span><br><span class="line">                            MotionEvent.obtain(</span><br><span class="line"></span><br><span class="line">                                    SystemClock.uptimeMillis(),</span><br><span class="line"></span><br><span class="line">                                    SystemClock.uptimeMillis(),</span><br><span class="line"></span><br><span class="line">                                    touchEventRequest.getAction(),</span><br><span class="line"></span><br><span class="line">                                    touchX,</span><br><span class="line"></span><br><span class="line">                                    touchY,</span><br><span class="line"></span><br><span class="line">                                    0));</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125; catch (InterruptedException e) &#123;</span><br><span class="line"></span><br><span class="line">                e.printStackTrace();</span><br><span class="line"></span><br><span class="line">                Thread.currentThread().interrupt();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>具体那种方案更优，需后期测试。</p><h2 id="1-3-ProtoBuf接入说明"><a href="#1-3-ProtoBuf接入说明" class="headerlink" title="1.3  ProtoBuf接入说明"></a>1.3  ProtoBuf接入说明</h2><p>Probobuf类似JSON得数据通讯协议，效率接近于二进制流，比JSON效率高很多。</p><p>Android-Studio 接入方式：</p><p>app的build.gradle配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: &apos;com.android.application&apos;</span><br><span class="line"></span><br><span class="line">apply plugin: &apos;com.google.protobuf&apos; //protobuf插件</span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line"></span><br><span class="line">    repositories &#123;</span><br><span class="line"></span><br><span class="line">        jcenter()</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    dependencies &#123;  //添加依赖</span><br><span class="line"></span><br><span class="line">        classpath &apos;com.google.protobuf:protobuf-gradle-plugin:0.8.0&apos;</span><br><span class="line"></span><br><span class="line">        // NOTE: Do not place your application dependencies here; they belong</span><br><span class="line"></span><br><span class="line">        // in the individual module build.gradle files</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line"></span><br><span class="line">     .......... //此处省略基础配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    sourceSets &#123;</span><br><span class="line"></span><br><span class="line">        main &#123;</span><br><span class="line"></span><br><span class="line">            java &#123;</span><br><span class="line"></span><br><span class="line">                srcDir &apos;src/main/java&apos;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            proto &#123; //指定probuf文件位置</span><br><span class="line"></span><br><span class="line">                srcDir &apos;src/main/proto&apos;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">protobuf &#123; //protobuf插件编译任务</span><br><span class="line"></span><br><span class="line">    protoc &#123;</span><br><span class="line"></span><br><span class="line">        artifact = &apos;com.google.protobuf:protoc:3.1.0&apos;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    generateProtoTasks &#123;</span><br><span class="line"></span><br><span class="line">        all().each &#123; task -&gt;</span><br><span class="line"></span><br><span class="line">            task.builtins &#123;</span><br><span class="line"></span><br><span class="line">                remove java</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            task.builtins &#123;</span><br><span class="line"></span><br><span class="line">                java &#123; &apos;src/main/java&apos; &#125;</span><br><span class="line"></span><br><span class="line">                // Add cpp output without any option.</span><br><span class="line"></span><br><span class="line">                // DO NOT omit the braces if you want this builtin to be added.</span><br><span class="line"></span><br><span class="line">                cpp &#123;&#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可参照URemoteSdk build.gradle配置</p><h2 id="1-4-URemoteSdk-调试及安装"><a href="#1-4-URemoteSdk-调试及安装" class="headerlink" title="1.4  URemoteSdk 调试及安装"></a>1.4  URemoteSdk 调试及安装</h2><p>URemoteSdk ，同时支持插件和独立APP的调试，三方APP在遥控器端最终是作为插件运行的。但是插件得方式不利于开发人员调试，所以该SDK同时支持</p><p>独立APP调试运行。</p><p>前置条件：</p><p>C_URemoteService.apk 遥控器端Service。</p><p>adb push C_URemoteService.apk  /system/app  </p><p>重启遥控器</p><p>S_URemoteService.apk 盒子端Service。</p><p>adb push S_URemoteService.apk  /system/app </p><p>重启盒子</p><p>1）独立APP调试（独立APP只做调试使用，不做最终安装部署）</p><p>通过6.1.1，6.1.2流程接入URemoteSdk后，直接安装或者adb push 都可以，app在data分区还是system分区都可以</p><p>2）插件调试，安装</p><p>通过6.1.1，6.1.2流程接入URemoteSdk后， adb push 对应APP到sdcard分区根目录。具体名称要和插件HOST程序商议协定。</p><p>以上调试和安装都是指双端APK包。</p><p>参考样例c_setting 工程</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;文档修订记录：&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;日期&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;版本&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;作者&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2017-05-22&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;uremotesdk 接口文档&lt;/td&gt;
&lt;td&gt;张海亮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-07-03&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;增加listener,callback接口说明&lt;/td&gt;
&lt;td&gt;张海亮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017-07-05&lt;/td&gt;
&lt;td&gt;1.0&lt;/td&gt;
&lt;td&gt;增加播控接口说明&lt;/td&gt;
&lt;td&gt;张海亮&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&quot;1-文档说明&quot;&gt;&lt;a href=&quot;#1-文档说明&quot; class=&quot;headerlink&quot; title=&quot;1 文档说明&quot;&gt;&lt;/a&gt;1 文档说明&lt;/h1&gt;&lt;h2 id=&quot;1-1-功能描述&quot;&gt;&lt;a href=&quot;#1-1-功能描述&quot; class=&quot;headerlink&quot; title=&quot;1.1 功能描述&quot;&gt;&lt;/a&gt;1.1 功能描述&lt;/h2&gt;&lt;p&gt;URemoteSdk 是盛世辉科技有限公司提供得一套针对电视盒子和盛世辉遥控器进行网络自定义指令通信方案。第三方盒子APP通过该sdk得接入，可以很放便的通过遥控器操控盒子，实现一些传统遥控器不可有的一些用户操作体验。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>web服务一些概念理解</title>
    <link href="http://yoursite.com/2017/03/23/server/"/>
    <id>http://yoursite.com/2017/03/23/server/</id>
    <published>2017-03-23T07:23:45.000Z</published>
    <updated>2018-05-17T07:06:39.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于服务器"><a href="#关于服务器" class="headerlink" title="关于服务器"></a>关于服务器</h1><h2 id="服务器种类介绍"><a href="#服务器种类介绍" class="headerlink" title="服务器种类介绍"></a>服务器种类介绍</h2><ol><li>独立服务器 </li></ol><blockquote><p>机房里实实在在的物理服务器，也可以理解为高配版的pc机。</p></blockquote><ol start="2"><li>vps (虚拟专用服务器）</li></ol><blockquote><p>独立服务器通过虚拟化技术虚拟出多个专用服务器。 </p></blockquote><ol start="3"><li>云服务ECS(Elastic Compute Service) </li></ol><blockquote><p>建立在服务器集群之上的，可以理解为，也是通过虚拟化技术整合多台独立服务器资源的弹性服务器。</p></blockquote><ol start="4"><li>虚拟主机 </li></ol><blockquote><p>一个独立主机或者vps服务器上，可以运行多个站点的技术。<br><a id="more"></a><br><strong>通俗的理解:</strong> </p></blockquote><p>云服务可以看作是大酒店，独立服务器可以认为是酒店的房间，vps 理解为房间的卧室，虚拟主机理解为卧室里一个床位。</p><p>你买了一个<strong>云服务</strong>，相当于你定了一个房间(这里只是比喻，这里并不一定是独立服务器），不够用随时加订，每一间卧室<strong>（vps)</strong>都可以睡觉，看电视，拉便便，但是<strong>虚拟主机</strong>就只能让你睡觉（部署站点用）。 </p><h2 id="服务器应用场景介绍"><a href="#服务器应用场景介绍" class="headerlink" title="服务器应用场景介绍"></a>服务器应用场景介绍</h2><ul><li>独立服务器 <ul><li>就是想要有自己的机房（比如大厂，企事业单位等）</li><li>服务器租赁提供商   </li></ul></li><li>虚拟主机 <ul><li>企业网站，个人博客(可参照阿里云理解<a href="https://wanwang.aliyun.com/hosting" target="_blank" rel="noopener">https://wanwang.aliyun.com/hosting</a>) </li></ul></li><li>vps <ul><li>适用于小型Web应用、轻量应用等低负载、突发型应用场景(可参照理解<a href="https://www.aliyun.com/product/swas" target="_blank" rel="noopener">https://www.aliyun.com/product/swas</a> 阿里云已提供系统镜像，应用镜像两种) </li></ul></li><li>云服务(弹性服务) <ul><li>企业应用，视频编码等高耗cpu负载的场景</li></ul></li></ul><h1 id="关于apache-http-server-tomcat-nginx"><a href="#关于apache-http-server-tomcat-nginx" class="headerlink" title="关于apache http server, tomcat, nginx"></a>关于apache http server, tomcat, nginx</h1><p>严格来说，apache http server/nginx 应该叫做<strong>HTTP Server</strong>(当然nginx可以作为邮件服务，Tcp服务适用）,tomcat 是<strong>AppServer</strong>，他们都可以： </p><ul><li>运行在上面说的服务器上，通过绑定服务器的ip地址，并监听某个tcp端口来接受并处理http请求。</li><li>通过配置，生成多个虚拟主机</li></ul><p>他们不同在于： </p><ul><li>apache http server/nginx 可以做代理，负载均衡，处理静态资源(就是不同客户端看到的东西是一样的)。</li><li>tomcat 可以处理动态资源（就是不同客户端看到的东西是不一样的）。</li></ul><p>所以一般tomcat 是和nginx配合使用的： </p><ul><li>动静资源分离，通过nginx反向代理功能，分发请求，动态资源交给tomcat,而静态资源直接邮nginx返回，这样大大减轻tomcat压力。 </li><li>负载均衡，业务压力增大时，一个tomcat 不足以处理时，可以启动多个tomcat实例进行水平扩展,而nginx的负载均衡功能可以把请求分发到不同的tomcat实例上。</li></ul><p><strong>以上web server都能作为虚拟主机配置使用，具体虚拟主机的配置策略有以下几种：</strong> </p><ul><li><p>基于ip</p><blockquote><p>把下面基于域名的配置的地方改为对应ip就可以，如果您的网站有强烈seo需求，可以配置独立外网ip。</p></blockquote></li></ul><ul><li><p>基于域名</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> &lt;!-- 360停车--&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;Host name="www.360park.com.cn"  appBase="webapps/360park"</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>       unpackWARs="true" autoDeploy="true"&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>   &lt;!-- SingleSignOn valve, share authentication between web applications</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>        Documentation at: /docs/config/valve.html --&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>   &lt;!--</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>   &lt;Valve className="org.apache.catalina.authenticator.SingleSignOn" /&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>   --&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>   &lt;Context path="" docBase="/rs/tomcat_web/webapps/360park" debug="0" reloadable="true" /&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>   &lt;!-- Access log processes all example.</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>        Documentation at: /docs/config/valve.html</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>        Note: The pattern used is equivalent to using pattern="common" --&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>   &lt;Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>          prefix="localhost_access_log." suffix=".txt"</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>          pattern="%h %l %u %t %r %s %b" /&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;/Host&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;!-- 新锐友信--&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;Host name="www.realer.cn"  appBase="webapps/tonghang"</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>   unpackWARs="true" autoDeploy="true"&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;Alias&gt;realer.cn&lt;/Alias&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;Alias&gt;www.realer.cn&lt;/Alias&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;!-- SingleSignOn valve, share authentication between web applications</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>    Documentation at: /docs/config/valve.html --&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;!--</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;Valve className="org.apache.catalina.authenticator.SingleSignOn" /&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> --&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;Context path="" docBase="/rs/tomcat_web/webapps/tonghang" debug="0" reloadable="true" /&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;!-- Access log processes all example.</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>    Documentation at: /docs/config/valve.html</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>    Note: The pattern used is equivalent to using pattern="common" --&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>      prefix="localhost_access_log." suffix=".txt"</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span>      pattern="%h %l %u %t %r %s %b" /&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;/Host&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote></li><li><p>基于端口</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> &lt;Service name="myService1" &gt;</span><br><span class="line"><span class="meta">&gt;</span>         &lt;Connector port="9081"/&gt;</span><br><span class="line"><span class="meta">&gt;</span>         &lt;Engine name="myEngine1" defaultHost="test1" &gt;</span><br><span class="line"><span class="meta">&gt;</span>                 &lt;Realm className="org.apache.catalina.realm.UserDatabaseRealm" resourceName="UserDatabase" /&gt;</span><br><span class="line"><span class="meta">&gt;</span>                 &lt;Host name="test1" appBase="webapps1" /&gt;</span><br><span class="line"><span class="meta">&gt;</span>         &lt;/Engine&gt;</span><br><span class="line"><span class="meta">&gt;</span> &lt;/Service&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;Service name="myService2" &gt;</span><br><span class="line"><span class="meta">&gt;</span>         &lt;Connector port="9082"/&gt;</span><br><span class="line"><span class="meta">&gt;</span>         &lt;Engine name="myEngine2" defaultHost="test2" &gt;</span><br><span class="line"><span class="meta">&gt;</span>                 &lt;Realm className="org.apache.catalina.realm.UserDatabaseRealm" resourceName="UserDatabase" /&gt;</span><br><span class="line"><span class="meta">&gt;</span>                 &lt;Host name="test2" appBase="webapps2" /&gt;</span><br><span class="line"><span class="meta">&gt;</span>         &lt;/Engine&gt;</span><br><span class="line"><span class="meta">&gt;</span> &lt;/Service&gt;</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> &lt;Service name="myService3" &gt;</span><br><span class="line"><span class="meta">&gt;</span>         &lt;Connector port="9083"/&gt;</span><br><span class="line"><span class="meta">&gt;</span>         &lt;Engine name="myEngine3" defaultHost="test3" &gt;</span><br><span class="line"><span class="meta">&gt;</span>                 &lt;Realm className="org.apache.catalina.realm.UserDatabaseRealm" resourceName="UserDatabase" /&gt;</span><br><span class="line"><span class="meta">&gt;</span>                 &lt;Host name="test3" appBase="webapps3" /&gt;</span><br><span class="line"><span class="meta">&gt;</span>         &lt;/Engine&gt;</span><br><span class="line"><span class="meta">&gt;</span> &lt;/Service&gt;</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote></li></ul><p>具体另外两个配置可自行百度，差不多，以上提供tomcat配置指南，实际中如果是静态网页的官网需求，最好是用nginx。</p><h1 id="正向代理-和-反向代理"><a href="#正向代理-和-反向代理" class="headerlink" title="正向代理 和 反向代理"></a>正向代理 和 反向代理</h1><p><img src="http://p8kn4m8eo.bkt.clouddn.com/nginx_3.jpg" alt=""></p><p>你想访问被墙掉的谷歌，你可以买一个vpn。这个vpn是你买的，是代理你去向谷歌发起请求的。</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/nginx_2.jpg" alt=""></p><p>你想访问百度，会有一个转发，到百度内网，对于你来说你不知道，也不关心，它是代理百度内部的服务。</p><p><strong>所以正向代理和反向代理的说法是相对的,但是通常描述都是以客户端为对照方（即发起请求方）</strong></p><h1 id="关于高并发"><a href="#关于高并发" class="headerlink" title="关于高并发"></a>关于高并发</h1><h2 id="负载均衡做什么用的呢？"><a href="#负载均衡做什么用的呢？" class="headerlink" title="负载均衡做什么用的呢？"></a>负载均衡做什么用的呢？</h2><p>其实可以按照动词的方式理解，反过来均衡负载，就是你的业务负载高的时候，通过一些技术手段均衡你的业务负载，解决<strong>高并发</strong>问题，高并发瓶颈一般在应用服务和数据库服务上。 </p><h2 id="应用服务负载均衡？"><a href="#应用服务负载均衡？" class="headerlink" title="应用服务负载均衡？"></a>应用服务负载均衡？</h2><ul><li><p>硬负载</p><ul><li>F5</li><li>Array   </li></ul></li><li><p>软负载 </p><ul><li><p>dns </p><p>dns负载均衡是通过DNS服务器实现的，主要用于把请求均匀的分布到nginx服务器上。其实真是情况中可能是用来根据地域区分请求。但是一个地域中的请求还算需要均匀的分配到nginx服务器上的。</p><p>有两个缺点：一个是无法区分服务是否挂掉，即时某个NGINX服务器挂掉了，DNS仍然会分配。另一个是DNS缓存的问题，用户访问网站，网站域名被DNS服务器解析为某个IP。这个IP一般情况都会在客户端本地进行缓存，短时间内下次再访问这个域名，会直接从缓存中拿，无法达到真正的均匀，但这对服务器影响不算太大。重要的请求个数无法真正的做到均衡，比如每个Nginx服务器拿到100个请求，但是所有的耗时大请求都集中到某一台服务器中，那么这个服务器压力将会很大。其他的会比较空闲。</p></li><li><p>lvs</p><p>基于网络七层协议第四层，针对高可伸缩、高可用网络服务的需求，我们给出了基于IP层和基于内容请求分发的负载平衡调度解决方法，并在Linux内核中实现了这些方法，将一组服务器构成一个实现可伸缩的、高可用网络服务的虚拟服务器。</p></li><li><p>nginx </p><p>基于网络七层协议上第七层（应用层），配置简单，nginx是目前流行的，优秀的反向代理服务器（其实他不仅仅是反向代理服务器，还是web服务器，也可以是邮件代理服务器，感谢俄罗斯人的智慧）。nginx作为反向代理服务器，主要负责把请求均匀的分摊到应用服务器中。为了达到均匀，Nginx有五种负载均衡策略。</p><ol><li>轮询 </li></ol><p>请求依次轮流往每个应用服务器上进行分配，分配策略比较简单。<br>缺点：不均匀，可能会出现，某些服务器接受的请求较重，负载压力重，有些负荷小，不可控。另外服务器之间需要进行session同步。</p><ol start="2"><li>权重轮询 </li></ol><p>在轮询的基础上给每个应用服务器一定的权重，比如三台服务器，权重设置为 0.4:0.4:0.2。来到10个请求（序号1到10），那么根据轮询以及权重，序号1、4、 6、 9的请求会打到 第一台服务器上，序号 2、 5 、7 、10 的请求会打到第二台服务器上，剩余序号3 、 8的 请求打到第三台服务器上。<br>优点：可以根据情况进行调整。可控，仍然需要进行session同步。</p><ol start="3"><li>IP-hash </li></ol><p>优点：无需进行session同步，固定IP会固定访问一台服务器。<br>缺点：恶意攻击，会造成某台服务器压垮。提供的服务不同，面向的地区不同，IP可能会出现集中，造成不均匀，不可控。</p><ol start="4"><li>fair </li></ol><p>这种相当于自适应，会根据服务器处理请求的速度进行负载均衡分配。处理请求最早结束的，拿到下一个请求。看上去是不是很好。但是一般都不使用，说是考虑到网络不稳定因素。还有待研究。这种也需要进行session同步。</p><ol start="5"><li>URL-hash </li></ol><p>这种是根据URL进行hash，这样某些请求永远打某台服务器。利于利用服务器的缓存，但是可能由于URL的哈希值分布不均匀，以及业务侧重造成某些服务器压力大，某些负荷低。这种也需要进行session同步。</p><p>目前比较流行的配置是使用第二种进行配置，但是实际生产中还是需要根据业务特点进行配置，每种策略都具有每种策略的优缺点。</p></li><li><p>haproxy  </p></li></ul></li></ul><h2 id="数据库负载均衡"><a href="#数据库负载均衡" class="headerlink" title="数据库负载均衡?"></a>数据库负载均衡?</h2><ul><li><p>读写分离</p><ul><li><p>spring应用层解决方案，配置多个数据源</p></li><li><p>中间件 mysql-proxy :<a href="https://downloads.mysql.com/archives/proxy/" target="_blank" rel="noopener">https://downloads.mysql.com/archives/proxy/</a></p><p>Amoeba for MySQL:<a href="http://docs.hexnova.com/amoeba/" target="_blank" rel="noopener">http://docs.hexnova.com/amoeba/</a></p></li></ul></li><li><p>分库分表 </p><ul><li>spring应用层解决方案，<a href="http://shardingjdbc.io/" target="_blank" rel="noopener">http://shardingjdbc.io/</a></li><li>中间件 mycat:<a href="http://www.mycat.io/" target="_blank" rel="noopener">http://www.mycat.io/</a></li></ul></li></ul><h1 id="关于高可用"><a href="#关于高可用" class="headerlink" title="关于高可用"></a>关于高可用</h1><p>  高可用：</p><ul><li><p>负载均衡主备 </p><p>nginx+keepalived(参考配置<a href="https://blog.csdn.net/lexang1/article/details/52386909），lvs+keepalived" target="_blank" rel="noopener">https://blog.csdn.net/lexang1/article/details/52386909），lvs+keepalived</a> (图转)</p><p><img src="http://p8kn4m8eo.bkt.clouddn.com/lvs.png" alt=""></p></li><li><p>数据库主备</p></li></ul><h1 id="关于高性能"><a href="#关于高性能" class="headerlink" title="关于高性能"></a>关于高性能</h1><p>高性能：</p><ul><li>http缓存服务器：squid/varnish/nginx cache ,按osi,应该属于应用层</li><li>存储缓存服务器: redis/memcached，按osi,属于存储阵营，应该属于表示层</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;关于服务器&quot;&gt;&lt;a href=&quot;#关于服务器&quot; class=&quot;headerlink&quot; title=&quot;关于服务器&quot;&gt;&lt;/a&gt;关于服务器&lt;/h1&gt;&lt;h2 id=&quot;服务器种类介绍&quot;&gt;&lt;a href=&quot;#服务器种类介绍&quot; class=&quot;headerlink&quot; title=&quot;服务器种类介绍&quot;&gt;&lt;/a&gt;服务器种类介绍&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;独立服务器 &lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;机房里实实在在的物理服务器，也可以理解为高配版的pc机。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;vps (虚拟专用服务器）&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;独立服务器通过虚拟化技术虚拟出多个专用服务器。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;云服务ECS(Elastic Compute Service) &lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;建立在服务器集群之上的，可以理解为，也是通过虚拟化技术整合多台独立服务器资源的弹性服务器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;虚拟主机 &lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;一个独立主机或者vps服务器上，可以运行多个站点的技术。&lt;br&gt;
    
    </summary>
    
      <category term="web" scheme="http://yoursite.com/categories/web/"/>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
</feed>
